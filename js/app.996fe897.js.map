{"version":3,"file":"js/app.996fe897.js","mappings":"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","sources":["webpack://Blog/./src/components/topMenu.vue","webpack://Blog/./src/App.vue","webpack://Blog/./src/components/learn/live2d/live2d.vue","webpack://Blog/./src/components/learn/live2d/live2d.vue?5dec","webpack://Blog/./src/components/leftMenu_learn.vue","webpack://Blog/./src/components/leftMenu_learn.vue?1c3f","webpack://Blog/./src/views/learn.vue","webpack://Blog/./src/components/learn/learn_alg/1_graph/dfs.vue","webpack://Blog/./src/components/learn/learn_alg/1_graph/dfs.vue?5f84","webpack://Blog/./src/components/learn/learn_alg/1_graph/bfs.vue","webpack://Blog/./src/components/learn/learn_alg/1_graph/bfs.vue?2a12","webpack://Blog/./src/components/learn/learn_alg/2_tree/treeDfs.vue","webpack://Blog/./src/components/learn/learn_alg/2_tree/treeDfs.vue?efb6","webpack://Blog/./src/components/learn/learn_alg/4_linkedNode/arrayNodes.vue","webpack://Blog/./src/components/learn/learn_alg/4_linkedNode/arrayNodes.vue?57df","webpack://Blog/./src/components/learn/learn_alg/5_heap/heap_ops.vue","webpack://Blog/./src/components/learn/learn_alg/5_heap/heap_ops.vue?822a","webpack://Blog/./src/components/learn/learn_alg/alg/ij.vue","webpack://Blog/./src/components/learn/learn_alg/alg/ij.vue?e520","webpack://Blog/./src/components/learn/learn_alg/alg/stringHash.vue","webpack://Blog/./src/components/learn/learn_alg/alg/stringHash.vue?ce0f","webpack://Blog/./src/components/learn/learn_alg/alg/trieTree.vue","webpack://Blog/./src/components/learn/learn_alg/alg/trieTree.vue?a5f1","webpack://Blog/./src/components/learn/learn_alg/alg/unionFind.vue","webpack://Blog/./src/components/learn/learn_alg/alg/unionFind.vue?db9f","webpack://Blog/./src/components/learn/learn_alg/alg/window.vue","webpack://Blog/./src/components/learn/learn_alg/alg/window.vue?6c57","webpack://Blog/./src/components/learn/learn_alg/3_sort/quicksort.vue","webpack://Blog/./src/components/learn/learn_alg/3_sort/quicksort.vue?5228","webpack://Blog/./src/components/learn/learn_alg/3_sort/mergesort.vue","webpack://Blog/./src/components/learn/learn_alg/3_sort/mergesort.vue?5270","webpack://Blog/./src/components/learn/toolAlgs/vector.vue","webpack://Blog/./src/components/learn/toolAlgs/vector.vue?508d","webpack://Blog/./src/components/learn/toolAlgs/deque.vue","webpack://Blog/./src/components/learn/toolAlgs/deque.vue?c6ca","webpack://Blog/./src/components/learn/toolAlgs/map.vue","webpack://Blog/./src/components/learn/toolAlgs/map.vue?97fb","webpack://Blog/./src/components/learn/toolAlgs/memset.vue","webpack://Blog/./src/components/learn/toolAlgs/memset.vue?35f2","webpack://Blog/./src/components/learn/toolAlgs/pair.vue","webpack://Blog/./src/components/learn/toolAlgs/pair.vue?4e38","webpack://Blog/./src/components/learn/toolAlgs/set.vue","webpack://Blog/./src/components/learn/toolAlgs/set.vue?c30c","webpack://Blog/./src/views/second.vue","webpack://Blog/./src/views/second.vue?151d","webpack://Blog/./src/components/learn/knowledge/ai/decisionTree.vue","webpack://Blog/./src/components/learn/knowledge/ai/decisionTree.vue?b75d","webpack://Blog/./src/components/learn/frontend/remender.vue","webpack://Blog/./src/components/learn/frontend/remender.vue?6a1d","webpack://Blog/./src/views/webs.vue","webpack://Blog/./src/components/learn/arrayImitate/stack.vue","webpack://Blog/./src/components/learn/arrayImitate/stack.vue?ac8e","webpack://Blog/./src/components/learn/arrayImitate/queue.vue","webpack://Blog/./src/components/learn/arrayImitate/queue.vue?eb11","webpack://Blog/./src/components/learn/arrayImitate/hash.vue","webpack://Blog/./src/components/learn/arrayImitate/hash.vue?8e15","webpack://Blog/./src/components/learn/arrayImitate/linkedNodes.vue","webpack://Blog/./src/components/learn/arrayImitate/linkedNodes.vue?6538","webpack://Blog/./src/components/learn/toolAlgs/strings.vue","webpack://Blog/./src/components/learn/toolAlgs/strings.vue?c298","webpack://Blog/./src/components/learn/learn_alg/0_often/zhishu.vue","webpack://Blog/./src/components/learn/learn_alg/0_often/zhishu.vue?c398","webpack://Blog/./src/components/learn/learn_alg/0_often/qianzhuihe.vue","webpack://Blog/./src/components/learn/learn_alg/0_often/qianzhuihe.vue?0b15","webpack://Blog/./src/components/learn/learn_alg/0_often/shaifa.vue","webpack://Blog/./src/components/learn/learn_alg/0_often/shaifa.vue?7a3f","webpack://Blog/./src/components/learn/learn_alg/0_often/alg.vue","webpack://Blog/./src/components/learn/learn_alg/0_often/alg.vue?765b","webpack://Blog/./src/components/questions/zuichanghuiwen.vue","webpack://Blog/./src/components/questions/zuichanghuiwen.vue?bbd1","webpack://Blog/./src/components/leftMenu_questions.vue","webpack://Blog/./src/views/questions.vue","webpack://Blog/./src/components/science/machine_learning.vue","webpack://Blog/./src/components/science/machine_learning.vue?0f41","webpack://Blog/./src/components/science/draw.vue","webpack://Blog/./src/components/science/draw.vue?79c1","webpack://Blog/./src/components/leftMenu_science.vue","webpack://Blog/./src/components/leftMenu_science.vue?4a5c","webpack://Blog/./src/views/science.vue","webpack://Blog/./src/components/science/ai/picRecognize.vue","webpack://Blog/./src/components/science/ai/picRecognize.vue?57fc","webpack://Blog/./src/components/questions/2_zzixingbianhuan.vue","webpack://Blog/./src/components/questions/2_zzixingbianhuan.vue?1202","webpack://Blog/./src/components/learn/learn_alg/alg/divid.vue","webpack://Blog/./src/components/learn/learn_alg/alg/divid.vue?11c3","webpack://Blog/./src/components/questions/sanshuzhihe.vue","webpack://Blog/./src/components/questions/sanshuzhihe.vue?f261","webpack://Blog/./src/components/questions/zhongweishuwenti.vue","webpack://Blog/./src/components/science/aitrifiles.vue","webpack://Blog/./src/components/science/aitrifiles.vue?b015","webpack://Blog/./src/components/questions/5_dfstemplate.vue","webpack://Blog/./src/components/questions/5_dfstemplate.vue?0814","webpack://Blog/./src/router/index.js","webpack://Blog/./src/main.js","webpack://Blog/webpack/bootstrap","webpack://Blog/webpack/runtime/chunk loaded","webpack://Blog/webpack/runtime/compat get default export","webpack://Blog/webpack/runtime/define property getters","webpack://Blog/webpack/runtime/global","webpack://Blog/webpack/runtime/hasOwnProperty shorthand","webpack://Blog/webpack/runtime/make namespace object","webpack://Blog/webpack/runtime/node module decorator","webpack://Blog/webpack/runtime/publicPath","webpack://Blog/webpack/runtime/jsonp chunk loading","webpack://Blog/webpack/startup"],"sourcesContent":["import script from \"./topMenu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./topMenu.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./topMenu.vue?vue&type=style&index=0&id=04d49bdd&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6c714e9e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <canvas ref=\"liveCanvas\" style=\"position:absolute;left:1360px;top:260px;\"></canvas>\r\n</template>\r\n\r\n<script>\r\n    import * as PIXI from 'pixi.js';\r\n    import { beforeUnmount } from 'vue';\r\n    import { Live2DModel } from 'pixi-live2d-display/cubism4';\r\n    window.PIXI = PIXI; // 为了pixi-live2d-display内部调用\r\n    let app; // 为了存储pixi实例\r\n    let model; // 为了存储live2d实例\r\n    export default {\r\n        async mounted(){\r\n            app = new PIXI.Application({\r\n                view: this.$refs.liveCanvas,\r\n                autoStart: true,\r\n                resizeTo: window,\r\n                backgroundAlpha: 0,\r\n            });\r\n            // static/live2dw/model/naxidaqwq.model3.json\r\n            // static/live2dw/model/MissBai.model3.json\r\n            // static/live2dw/model/Nahida_1080/Nahida_1080.model3.json\r\n            //static/live2dw/runtime/hiyori_pro_t11.model3.json\r\n            model = await Live2DModel.from('static/live2dw/model/Nahida_1080/Nahida_1080.model3.json');\r\n            // draggable(model);\r\n            app.stage.addChild(model);\r\n            model.scale.set(0.05); // 调整缩放比例，一般原始资源尺寸非常大，需要缩小\r\n            var hitAreas = model.internalModel.hitAreas;\r\n            model.y=200\r\n            model.on(\"pointerdown\", (hitAreas)=>{\r\n                // e 包含点击的区域和鼠标坐标\r\n                const { x, y } = hitAreas.data.global \r\n                const point = model.hitTest(x, y)\r\n                console.log('1')\r\n                model.expression(\"kuku\");\r\n            });\r\n           }\r\n// ,\r\n\r\n//         beforeUnmount(){\r\n//             model?.destroy();\r\n//             app?.destroy();\r\n//         }\r\n    }\r\n\r\n\r\n//     function draggable(model) {\r\n//         model.buttonMode = true;\r\n//         model.on(\"pointerdown\", (e) => {\r\n//         model.dragging = true;\r\n//         model._pointerX = e.data.global.x - model.x;\r\n//         model._pointerY = e.data.global.y - model.y;\r\n//         });\r\n\r\n//         model.on(\"pointermove\", (e) => {\r\n//         if (model.dragging) {\r\n//             model.position.x = e.data.global.x - model._pointerX;\r\n//             model.position.y = e.data.global.y - model._pointerY;\r\n//         }\r\n//         });\r\n//         model.on(\"pointerupoutside\", () => (model.dragging = false));\r\n//         model.on(\"pointerup\", () => (model.dragging = false));\r\n//   }\r\n\r\n    // 绑定模型拖拽方法\r\n    </script>","import { render } from \"./live2d.vue?vue&type=template&id=5aed1133\"\nimport script from \"./live2d.vue?vue&type=script&lang=js\"\nexport * from \"./live2d.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<!-- :default-openeds=\"arr.start\" -->\r\n        <el-menu\r\n            :router=\"true\"\r\n            class=\"scoped el-menu-demo\"\r\n           active-text-color=\"#ffd04b\"\r\n default-active=\"/learn/bfs\"\r\n          \r\n        >\r\n          <el-sub-menu index=\"1\">\r\n            <template #title>\r\n              <el-icon><icon-menu /></el-icon>\r\n              <span><strong>算法</strong></span>\r\n            </template>\r\n\r\n            <el-sub-menu index=\"1-1\">\r\n            <template #title>\r\n              <!-- <el-icon><icon-menu /></el-icon> -->\r\n              <span><strong>常用算法</strong></span>\r\n            </template>\r\n            <el-menu-item index=\"/learn/alg\">算法注意点</el-menu-item>\r\n            <el-menu-item index=\"/learn/zhishu\">试除法判定质数</el-menu-item>\r\n            <el-menu-item index=\"/learn/shaifa\">筛法</el-menu-item>\r\n            <el-menu-item index=\"/learn/qianzhuihe\">前缀和</el-menu-item>\r\n            \r\n\r\n          </el-sub-menu>\r\n\r\n            <el-menu-item-group  title=\"graph\">\r\n              <el-menu-item index=\"/learn/dfs\">DFS</el-menu-item>\r\n              <el-menu-item index=\"/learn/bfs\">BFS</el-menu-item>\r\n            </el-menu-item-group>\r\n            <el-menu-item-group title=\"tree\">\r\n              <el-menu-item index=\"/learn/treeDfs\">树的DFS</el-menu-item>\r\n            </el-menu-item-group>\r\n            <el-menu-item-group title=\"sort\">\r\n              <el-menu-item index=\"/learn/quicksort\">快速排序</el-menu-item>\r\n              <el-menu-item index=\"/learn/mergesort\">归并排序</el-menu-item>\r\n            </el-menu-item-group>\r\n            <el-menu-item-group title=\"linknode\">\r\n              <el-menu-item index=\"/learn/arrayNodes\">数组模拟链表</el-menu-item>\r\n            </el-menu-item-group>\r\n            <el-menu-item-group title=\"heap\">\r\n              <el-menu-item index=\"/learn/heap_ops\">堆的操作</el-menu-item>\r\n            </el-menu-item-group>\r\n            <el-menu-item-group title=\"alg\">\r\n              <el-menu-item index=\"/learn/ij\">快慢指针</el-menu-item>\r\n              <el-menu-item index=\"/learn/divid\">二分查找</el-menu-item>\r\n              <el-menu-item index=\"/learn/stringHash\">字符串哈希</el-menu-item>\r\n              <el-menu-item index=\"/learn/trieTree\">trie树</el-menu-item>\r\n              <el-menu-item index=\"/learn/unionFind\">并查集</el-menu-item>\r\n              <el-menu-item index=\"/learn/window\">滑动窗口</el-menu-item>\r\n            </el-menu-item-group>\r\n          </el-sub-menu>\r\n          <el-divider></el-divider>\r\n\r\n          <el-sub-menu index=\"2\">\r\n            <template #title>\r\n              <el-icon><Compass /></el-icon>\r\n              <span><strong>辅助STL</strong>\r\n              </span>\r\n            </template>\r\n            <el-menu-item index=\"/learn/strings\">String</el-menu-item>\r\n            <el-menu-item index=\"/learn/pair\">Pair</el-menu-item>\r\n            <el-menu-item index=\"/learn/vector\">Vector</el-menu-item>\r\n            <el-menu-item index=\"/learn/set\">Set</el-menu-item>\r\n            <el-menu-item index=\"/learn/map\">Map</el-menu-item>\r\n            <el-menu-item index=\"/learn/memset\">Memset</el-menu-item>\r\n            <el-menu-item index=\"/learn/deque\">Deque</el-menu-item>\r\n          </el-sub-menu>\r\n          <el-divider></el-divider>\r\n          <el-sub-menu index=\"3\">\r\n            <template #title>\r\n              <el-icon><HelpFilled /></el-icon>\r\n              <span><strong>数组模拟结构</strong>\r\n              </span>\r\n            </template>\r\n            <el-menu-item  index=\"/learn/stack\">模拟栈</el-menu-item>\r\n            <el-menu-item  index=\"/learn/queue\">模拟队列</el-menu-item>\r\n            <el-menu-item  index=\"/learn/hash\">模拟哈希表</el-menu-item>\r\n            <el-menu-item  index=\"/learn/linkedNodes\">模拟链表</el-menu-item>\r\n          </el-sub-menu>\r\n          <el-divider></el-divider>\r\n          <el-sub-menu index=\"4\">\r\n            <template #title>\r\n              <el-icon><TrendCharts /></el-icon>\r\n              <span><strong>知识</strong>\r\n              </span>\r\n            </template>\r\n            <el-menu-item  index=\"/learn/decisionTree\">决策树</el-menu-item>\r\n          </el-sub-menu>\r\n          <el-divider></el-divider>\r\n\r\n          <el-sub-menu index=\"5\">\r\n            <template #title>\r\n              <el-icon><Monitor /></el-icon>\r\n              <span><strong>前端</strong>\r\n              </span>\r\n            </template>\r\n            <el-menu-item  index=\"/learn/remender\">备忘</el-menu-item>\r\n          </el-sub-menu>\r\n          <el-divider></el-divider>\r\n\r\n          \r\n\r\n\r\n          <el-sub-menu index=\"8\" style=\"z-index: 8!important;\">\r\n            <template #title>\r\n              <el-icon><setting /></el-icon>\r\n            <span><strong>设置</strong></span>\r\n            </template>\r\n           \r\n          </el-sub-menu>\r\n  <!-- <live2d style=\"z-index: 100!important;\"></live2d> -->\r\n\r\n        </el-menu>\r\n\r\n  </template>\r\n  \r\n  <script setup>\r\n// import live2d from './learn/live2d/live2d.vue';\r\n\r\n  import {\r\n    HelpFilled,\r\n    Monitor,\r\n    Compass,\r\n    TrendCharts,\r\n    Menu as IconMenu,\r\n    Setting,\r\n  } from '@element-plus/icons-vue'\r\nimport { reactive } from 'vue';\r\nvar arr=reactive({start:[\"1\"]})\r\n  </script>\r\n  <style scoped>\r\n.scoped .el-menu-item {font-size: 13px;}\r\n.el-menu-demo .el-menu-item:hover .el-sub-menu:hover {\r\n  background-color: #fff !important; /* 修改为你想要的颜色 */\r\n}\r\n \r\n</style>","import script from \"./leftMenu_learn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./leftMenu_learn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./leftMenu_learn.vue?vue&type=style&index=0&id=7068061b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7068061b\"]])\n\nexport default __exports__","import script from \"./learn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./learn.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>模版：\r\n\r\n<el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"12\"><highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code3\"></highlightjs></el-col>\r\n        <el-col :span=\"12\"><highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code4\"></highlightjs></el-col>\r\n    </el-row>\r\n\r\n\r\n\r\n  dfs模版， acwing842.排序数字。输入一个数n，输出从1到n所有序列<br/>\r\n        例如：输入3，则输出123,132,213,231,312,321<br/>\r\n        为什么main中dfs(0)?例如输入的是3，从第0个位置开始，再看第一个位置，再看第二个位置，再看第三个位置（就是空了，此时输出）<br/>\r\n        之后的for循环逐个填入，st存的是1,2,3三个数字哪几个已被使用，使用了则为true。path存的是已经走过的路径。\r\n  <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n八皇后问题，输入n，将n个皇后放在n*n的棋盘上，让每一行、每一列、每条斜线都没有两个皇后。\r\n<highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n\r\n\r\n    \r\n  </template>\r\n  <script setup>\r\nvar code4=`void dfs(int u){\r\n    st[u]=true;//标记一下，已经被搜过了\r\n    for(int i = h[u];i !=-1;i =ne[i])\r\n    {\r\n        int j =e[i];\r\n        if(!st[j])dfs(j);\r\n    }\r\n}`\r\nvar code3 =`dfs()//参数用来表示状态  \r\n{  \r\n    if(到达终点状态)  \r\n    {  \r\n        ...//根据题意添加  \r\n        return;  \r\n    }  \r\n    if(越界或者是不合法状态)  \r\n        return;  \r\n    if(特殊状态)//剪枝\r\n        return ;\r\n    for(扩展方式)  \r\n    {  \r\n        if(扩展方式所达到状态合法)  \r\n        {  \r\n            修改操作;//根据题意来添加  \r\n            标记；  \r\n            dfs（）；  \r\n            (还原标记)；  \r\n            //是否还原标记根据题意  \r\n            //如果加上（还原标记）就是 回溯法  \r\n        }  \r\n\r\n    }  \r\n}\r\n`\r\n  var code1=`#include<stdio.h>\r\n#include<string.h>\r\n#define  N  8\r\nint n,path[N],st[N];\r\nvoid dfs(int x){\r\n    if(x==n){\r\n        for(int i = 0 ; i < n;i++)printf(\"%d \",path[i]);\r\n        puts(\"\");\r\n        return;\r\n    }\r\n    for(int i=1;i<=n;i++ ){//数字为从1到n\r\n        if(!st[i]){\r\n            st[i]=1;\r\n            path[x]=i;\r\n            dfs(x+1);\r\n            st[i]=0;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    scanf(\"%d\",&n);\r\n    dfs(0);\r\n}`\r\n  var code=`#include<string.h>\r\n#include<stdio.h>\r\n#define N 20\r\nint n;\r\nchar g[N][N];\r\nint col[N],dg[N],udg[N];\r\nvoid dfs(int x){\r\n    if(x==n){\r\n        for(int i = 0 ; i < n ; i ++)puts(g[i]);\r\n        puts(\"\");\r\n        return;\r\n    }\r\n    for(int i = 0 ; i < n ; i ++){\r\n        if(!col[i]&&!dg[x+i]&&!udg[n-x+i]){\r\n            g[x][i]='Q';\r\n            col[i]=dg[x+i]=udg[n-x+i]=1;\r\n            dfs(x+1);\r\n            col[i]=dg[x+i]=udg[n-x+i]=0;\r\n            g[x][i]='.';\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    scanf(\"%d\",&n);\r\n    for(int i = 0 ; i < n ; i++){\r\n        for(int j = 0 ; j < n ; j ++){\r\n            g[i][j]='.';\r\n        \r\n        }\r\n    }\r\n    dfs(0);\r\n    return 0;\r\n}\r\n\r\n`\r\n  </script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./dfs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./dfs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n   模版如下，细讲可以点击<a href=\"https://www.acwing.com/blog/content/461/\" target=\"_black\">这里</a>：\r\n<highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n\r\n   只有当所有边权都是1的时候，才能用bfs求最短路\r\n   <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"codemi\"></highlightjs>\r\n\r\n\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 194.219px; left: 13.3875px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre>x</pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//847.图中点的层次 &nbsp; BFS</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;cstdio&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;cstring&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;algorithm&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;queue&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">100010</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>, <span class=\"cm-variable\">m</span>;</span></pre><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">idx</span>;</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">d</span>[<span class=\"cm-variable\">N</span>];<span class=\"cm-comment\">// 保存1号点到各个点的距离</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// -------------------------------A1开始------------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">add</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>, <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">b</span>)</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">b</span>, <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">a</span>], <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">a</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">++</span> ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// -------------------------------A1结束------------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">bfs</span>()</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//---------------------------------------------A2开始-------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">memset</span>(<span class=\"cm-variable\">d</span>, <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>, <span class=\"cm-keyword\">sizeof</span> <span class=\"cm-variable\">d</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">queue</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">q</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">d</span>[<span class=\"cm-number\">1</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push</span>(<span class=\"cm-number\">1</span>);</span></pre><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span> (<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">size</span>())</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">t</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">front</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">//---------------------------------------A2结束--------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">// ---------------核心代码开始---------------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">// 循环遍历所有与t相距为1的节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">t</span>]; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">i</span>]) <span class=\"cm-comment\">// ne[i]上的点都是与i节点距离为1的点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">j</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">i</span>]; <span class=\"cm-comment\">// 向外走一步</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">d</span>[<span class=\"cm-variable\">j</span>] <span class=\"cm-operator\">==</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>) <span class=\"cm-comment\">// 如果j没有被遍历过</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">d</span>[<span class=\"cm-variable\">j</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">d</span>[<span class=\"cm-variable\">t</span>] <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>; <span class=\"cm-comment\">// 因为路径长度都是1，所以直接在上一步的基础上加上1即可</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push</span>(<span class=\"cm-variable\">j</span>); <span class=\"cm-comment\">// 将j加到队列中</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">d</span>[<span class=\"cm-variable\">n</span>]; <span class=\"cm-comment\">// 返回的d[n]即是节点1到节点n的距离</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// ---------------核心代码结束---------------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// ---------------A3开始---------------------------------------</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>()</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">n</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">m</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">memset</span>(<span class=\"cm-variable\">h</span>, <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>, <span class=\"cm-keyword\">sizeof</span> <span class=\"cm-variable\">h</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">m</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span> )</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">a</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">b</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">bfs</span>() <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1858px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 1858px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n  </template>\r\n  <script setup>\r\nvar codemi=`\r\n//走迷宫（1为墙0为路，任意两格距离为1）\r\n#include <iostream>\r\n#include <queue>        //使用队列的需要用的头文件\r\n#include <cstring>      //使用memset()需要用到的头文件\r\nusing namespace std;\r\n\r\ntypedef pair<int, int> PII; //定义坐标的数据结构\r\n\r\nconst int N = 110;\r\n\r\nint n, m;\r\nint g[N][N];    //记录地图信息\r\nint d[N][N];    //记录每个顶点到源点的距离\r\n\r\nint bfs() {\r\n    queue<PII> q;   //定义一个坐标队列\r\n    q.push({0,0});  //源点进队\r\n\r\n    memset(d, -1, sizeof d);    //初始化各个点到源点的距离为-1\r\n    d[0][0] = 0;                //源点到自己的距离为0\r\n\r\n    int dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};     //向四个方向扩展的坐标数组(个人按照[上右下左]的顺序)\r\n\r\n    while(!q.empty()) {\r\n        auto t = q.front();     //取队头元素\r\n        q.pop();                //队头元素出队\r\n\r\n        for(int i = 0; i < 4; i++) {    //分别向四个方向扩展\r\n            int x = t.first + dx[i], y = t.second + dy[i];  //扩展后的坐标\r\n            //首先(x,y)不能越界, 然后g[x][y] == 0说明可以走(g[x][y] == 1说明是障碍物)\r\n            //最后是只更新未被访问的点到源点的距离 (要求d[x][y] == -1)\r\n            if(x >= 0 && x < n && y >= 0 && y < m && g[x][y] == 0 && d[x][y] == -1) {\r\n                d[x][y] = d[t.first][t.second] + 1; //更新未被访问的点到源点的距离\r\n                q.push({x,y});                      //(x,y)进队\r\n            }\r\n        }\r\n    }\r\n    return d[n-1][m-1];     //返回右下角元素到源点的距离\r\n}\r\n\r\nint main() {\r\n    cin >> n >> m;\r\n    for(int i = 0; i < n; i++)\r\n        for(int j = 0; j < m; j++)\r\n            cin >> g[i][j];     //读入地图信息\r\n    cout << bfs() << endl;\r\n    return 0;\r\n}`\r\n  var code =`queue<int> q;\r\nst[0] = true; // 表示1号点已经被遍历过\r\nq.push(0);\r\n\r\nwhile (q.size())\r\n{\r\n    int t = q.front();\r\n    q.pop();\r\n\r\n    for (int i = h[t]; i != -1; i = ne[i])\r\n    {\r\n        int j = e[i];\r\n        if (!s[j])\r\n        {\r\n            st[j] = true; // 表示点j已经被遍历过\r\n            q.push(j);\r\n        }\r\n    }\r\n}\r\n`\r\n  </script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./bfs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./bfs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//树的dfs及其框架</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;algorithm&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;cstring&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>; <span class=\"cm-comment\">//数据范围是10的5次方</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">M</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">2</span> <span class=\"cm-operator\">*</span> <span class=\"cm-variable\">N</span>; <span class=\"cm-comment\">//以有向图的格式存储无向图，所以每个节点至多对应2n-2条边</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">N</span>]; <span class=\"cm-comment\">//邻接表存储树，有n个节点，所以需要n个队列头节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">M</span>]; <span class=\"cm-comment\">//存储元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">M</span>]; <span class=\"cm-comment\">//存储列表的next值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">idx</span>; <span class=\"cm-comment\">//单链表指针</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-comment\">//题目所给的输入，n个节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">ans</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">N</span>; <span class=\"cm-comment\">//表示重心的所有的子树中，最大的子树的结点数目</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">bool</span> <span class=\"cm-variable\">st</span>[<span class=\"cm-variable\">N</span>]; <span class=\"cm-comment\">//记录节点是否被访问过，访问过则标记为true</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//a所对应的单链表中插入b  a作为根 </span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">add</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>, <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">b</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">b</span>, <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">a</span>], <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">a</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span><span class=\"cm-operator\">++</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// dfs 框架</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">void dfs(int u){</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">st[u]=true; // 标记一下，记录为已经被搜索过了，下面进行搜索过程</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">for(int i=h[u];i!=-1;i=ne[i]){</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">int j=e[i];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">if(!st[j]) {</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">dfs(j);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">}</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">}</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">}</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//返回以u为根的子树中节点的个数，包括u节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">dfs</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">u</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">res</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-comment\">//存储 删掉某个节点之后，最大的连通子图节点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">st</span>[<span class=\"cm-variable\">u</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-atom\">true</span>; <span class=\"cm-comment\">//标记访问过u节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">sum</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>; <span class=\"cm-comment\">//存储 以u为根的树 的节点数, 包括u，如图中的4号节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//访问u的每个子节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">u</span>]; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">i</span>]) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">j</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">i</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">//因为每个节点的编号都是不一样的，所以 用编号为下标 来标记是否被访问过</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-operator\">!</span><span class=\"cm-variable\">st</span>[<span class=\"cm-variable\">j</span>]) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">s</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">dfs</span>(<span class=\"cm-variable\">j</span>); &nbsp;<span class=\"cm-comment\">// u节点的单棵子树节点数 如图中的size值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">res</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">max</span>(<span class=\"cm-variable\">res</span>, <span class=\"cm-variable\">s</span>); <span class=\"cm-comment\">// 记录最大联通子图的节点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">sum</span> <span class=\"cm-operator\">+=</span> <span class=\"cm-variable\">s</span>; <span class=\"cm-comment\">//以j为根的树 的节点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//n-sum 如图中的n-size值，不包括根节点4；</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">res</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">max</span>(<span class=\"cm-variable\">res</span>, <span class=\"cm-variable\">n</span> <span class=\"cm-operator\">-</span> <span class=\"cm-variable\">sum</span>); <span class=\"cm-comment\">// 选择u节点为重心，最大的 连通子图节点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ans</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">min</span>(<span class=\"cm-variable\">res</span>, <span class=\"cm-variable\">ans</span>); <span class=\"cm-comment\">//遍历过的假设重心中，最小的最大联通子图的 节点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">sum</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">memset</span>(<span class=\"cm-variable\">h</span>, <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>, <span class=\"cm-keyword\">sizeof</span> <span class=\"cm-variable\">h</span>); <span class=\"cm-comment\">//初始化h数组 -1表示尾节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-comment\">//表示树的结点数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// 题目接下来会输入，n-1行数据，</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// 树中是不存在环的，对于有n个节点的树，必定是n-1条边</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">a</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">b</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">a</span>, <span class=\"cm-variable\">b</span>), <span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">b</span>, <span class=\"cm-variable\">a</span>); <span class=\"cm-comment\">//无向图</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">dfs</span>(<span class=\"cm-number\">1</span>); <span class=\"cm-comment\">//可以任意选定一个节点开始 u&lt;=n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">ans</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 2067px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 2067px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./treeDfs.vue?vue&type=template&id=114d4ae0\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//数组模拟单链表</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//数组模拟单链表 静态链表</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;<span class=\"cm-comment\">//数据规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/* head : 头结点的下标</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* e[i] ： 表示结点i的值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* ne[i] ： 表示结点i的next</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* idx  : index 即存储当前用到了哪一个点了</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* 数组下表从0开始</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* */</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">head</span>, <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">idx</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//对链表进行初始化</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">init</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>;<span class=\"cm-comment\">//最开始的时候，链表的头节点要指向-1，</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//为的就是在后面进行不断操作后仍然可以知道链表是在什么时候结束</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">插句题外话，我个人认为head其实就是一个指针，是一个特殊的指针罢了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">刚开始的时候它负责指向空结点，在链表里有元素的时候，它变成了一个指向第一个元素的指针</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">当它在初始化的时候指向-1，来表示链表离没有内容。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-comment\">//idx在我看来扮演两个角色，第一个是在一开始的时候，作为链表的下标，让我们好找</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//第二在链表进行各种插入，删除等操作的时候，作为一个临时的辅助性的所要操作的元素的下</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//标来帮助操作。并且是在每一次插入操作的时候，给插入元素一个下标，给他一个窝，感动！</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">再次插句话，虽然我们在进行各种操作的时候，元素所在的下标看上去很乱，但是当我们访问的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">时候，是靠着指针，也就是靠ne[]来访问的，这样下标乱，也就我们要做的事不相关了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">另外，我们遍历链表的时候也是这样，靠的是ne[]</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将x插入到头节点上</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">int_to_head</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>){<span class=\"cm-comment\">//和链表中间插入的区别就在于它有head头节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">x</span>;<span class=\"cm-comment\">//第一步，先将值放进去</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">head</span>;<span class=\"cm-comment\">//head作为一个指针指向空节点，现在ne[idx] = head;做这把交椅的人换了</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//先在只是做到了第一步，将元素x的指针指向了head原本指向的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span>;<span class=\"cm-comment\">//head现在表示指向第一个元素了，它不在是空指针了。（不指向空气了）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">++</span>;<span class=\"cm-comment\">//指针向下移一位，为下一次插入元素做准备。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将x插入到下标为k的点的后面</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">add</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>, <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">x</span>;<span class=\"cm-comment\">//先将元素插进去</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>];<span class=\"cm-comment\">//让元素x配套的指针，指向它要占位的元素的下一个位置</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span>;<span class=\"cm-comment\">//让原来元素的指针指向自己</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">++</span>;<span class=\"cm-comment\">//将idx向后挪</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">为了将这个过程更好的理解，现在</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">将指针转变的这个过程用比喻描述一下，牛顿老师为了省事，想插个队，队里有两个熟人</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">张三和李四，所以，他想插到两个人中间，但是三个人平时关系太好了，只要在一起，就</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">要让后面的人的手插到前面的人的屁兜里。如果前面的人屁兜里没有基佬的手，将浑身不</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">适。所以，必须保证前面的人屁兜里有一只手。（张三在前，李四在后）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">这个时候，牛顿大步向前，将自己的手轻轻的放入张三的屁兜里，（这是第一步）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">然后，将李四放在张三屁兜里的手抽出来放到自己屁兜里。（这是第二步）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">经过这一顿骚操作，三个人都同时感觉到了来自灵魂的战栗，打了个哆嗦。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将下标是k的点后面的点个删掉</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">remove</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>]];<span class=\"cm-comment\">//让k的指针指向，k下一个人的下一个人，那中间的那位就被挤掉了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">init</span>();<span class=\"cm-comment\">//初始化</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span> ) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">s</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">s</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'H'</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">int_to_head</span>(<span class=\"cm-variable\">x</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'D'</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">k</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">==</span> <span class=\"cm-number\">0</span>) <span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">head</span>];<span class=\"cm-comment\">//删除头节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">remove</span>(<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>);<span class=\"cm-comment\">//注意删除第k个输入后面的数，那函数里放的是下标，k要减去1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'I'</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>, <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">k</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>, <span class=\"cm-variable\">x</span>);<span class=\"cm-comment\">//同样的，第k个数，和下标不同，所以要减1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">head</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">i</span>]) <span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-string\">' '</span> ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 2433px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 2433px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./arrayNodes.vue?vue&type=template&id=3a4f1518\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//堆操作</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//1.插入一个数 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  heap[ ++size] = x;up(size);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//2.求集合当中的最小值 &nbsp; &nbsp; &nbsp; heap[1];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//3.删除最小值 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  heap[1] = heap[size];size--;down(1);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//4.删除任意一个元素 &nbsp; &nbsp; &nbsp; &nbsp; heap[k] = heap[size];size--;down(k);up(k);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//5.修改任意一个元素 &nbsp; &nbsp; &nbsp; &nbsp; heap[k] = x;down(k);up(k);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;algorithm&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e5</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span> ,<span class=\"cm-variable\">m</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">N</span>],<span class=\"cm-variable\">se</span>;<span class=\"cm-comment\">//堆（从1开始），和规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">down</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">u</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">t</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">u</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">u</span><span class=\"cm-operator\">*</span><span class=\"cm-number\">2</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">se</span> <span class=\"cm-operator\">&amp;&amp;</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">u</span><span class=\"cm-operator\">*</span><span class=\"cm-number\">2</span>] <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">t</span>])<span class=\"cm-variable\">t</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">2</span> <span class=\"cm-operator\">*</span> <span class=\"cm-variable\">u</span>;<span class=\"cm-comment\">//左子节点存在（判定只需下标小于size），且左子节点小于当前节点，则去到左孩子进行递归</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">u</span><span class=\"cm-operator\">*</span><span class=\"cm-number\">2</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">se</span> <span class=\"cm-operator\">&amp;&amp;</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-number\">2</span><span class=\"cm-operator\">*</span><span class=\"cm-variable\">u</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>] <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">t</span>])<span class=\"cm-variable\">t</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">u</span> <span class=\"cm-operator\">*</span> <span class=\"cm-number\">2</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>;<span class=\"cm-comment\">//比较右孩子</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">u</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-variable\">t</span>){<span class=\"cm-comment\">//如果u==t，也就是已经是最后一个，或已经满足小根堆的定义</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">swap</span>(<span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">u</span>],<span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">t</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">down</span>(<span class=\"cm-variable\">t</span>);<span class=\"cm-comment\">//递归这样的操作</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">n</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">m</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>;<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">n</span> ;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">se</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//初始化堆，最快的O(n)优化 二叉树的次低层开始 数学证明参见高中数列经典问题</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">n</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span>; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">--</span>)<span class=\"cm-variable\">down</span>(<span class=\"cm-variable\">i</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//输出前m小的数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* 核心思想 </span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* heap[1]=heap[size] 最后一个数替换最小值，操作逻辑：数组的最后一个元素删除更容易</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* size--; &nbsp; 逻辑：删除操作导致数组 少了一个数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* down(1) &nbsp; 逻辑: 换上来的heap[1]不一定是最小值，需要down </span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; <span class=\"cm-comment\">* */</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//每次取出一个元素，再删除这个元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">m</span><span class=\"cm-operator\">--</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">printf</span>(<span class=\"cm-string\">\"%d \"</span>,<span class=\"cm-variable\">h</span>[<span class=\"cm-number\">1</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">h</span>[<span class=\"cm-number\">1</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">se</span><span class=\"cm-operator\">--</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">down</span>(<span class=\"cm-number\">1</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1230px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 1230px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./heap_ops.vue?vue&type=template&id=461f7e0b\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>双指针模版</strong></template>\r\n    1、边界值是否取等号，爬坡先平后升也算爬坡<br/>\r\n    2、使用双指针算法模板<br/>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"mod_code\"></highlightjs>\r\n  </el-card>\r\n<el-divider></el-divider>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//快慢指针</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//最长连续不重复序列长度 O(n)时间复杂度，O(n)空间复杂度</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>;<span class=\"cm-comment\">//数据规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">N</span>];<span class=\"cm-comment\">//存放原整数序列</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">s</span>[<span class=\"cm-variable\">N</span>];<span class=\"cm-comment\">//动态数组用于控制是否有重复  如果区间内有重复，重复数的个数一定会大于1，这是触发指针移动的逻辑条件</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">n</span>;<span class=\"cm-comment\">//输入数据规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">cin</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>];<span class=\"cm-comment\">//输入整数序列</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">max</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-comment\">//初始化最长长度</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>,<span class=\"cm-variable\">j</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){<span class=\"cm-comment\">//右指针从头扫描整个数组</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">s</span>[<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]]<span class=\"cm-operator\">++</span>;<span class=\"cm-comment\">//右指针移动一位，动态数组的a[i]位置的数量就会加1；</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">s</span>[<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]] <span class=\"cm-operator\">&gt;</span> <span class=\"cm-number\">1</span>){<span class=\"cm-comment\">//当a[i]位置的数量大于1，意味着出现重复，移动左指针，直到没有重复</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">//每移动一次左指针，就要减少a[j]的数量（实际上就是依次找到a[j]=a[i]的那个j）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">s</span>[<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">j</span>]]<span class=\"cm-operator\">--</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">j</span><span class=\"cm-operator\">++</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">max</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">max</span> <span class=\"cm-operator\">&gt;</span> (<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">-</span> <span class=\"cm-variable\">j</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>) <span class=\"cm-operator\">?</span> <span class=\"cm-variable\">max</span>:(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">j</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>);<span class=\"cm-comment\">//每次执行完，看看是否能进行更新max</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">max</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 654px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 654px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>完美序列</strong></template>\r\n    acwing1571 完美序列   <br/>\r\n    输入p和数组  从输入的数组中选出最多的数列，（可以打乱，注意是选出）输出长度。数列满足的条件是M<=m*p<br/>\r\n· i指向最大的数<br/>\r\n· j指向最小的数<br/>\r\n· 如果不符合M<=m*p则向右移动j指针，直至符合条件为止<br/>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"per_code\"></highlightjs>\r\n  </el-card>\r\n  <el-divider></el-divider>\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>向量内积</strong></template>\r\n    acwing3288 向量内积   <br/>\r\n    输入两个稀疏矩阵，矩阵中的每个非零元素通过二元组index，value表示<br/>\r\n输出两个向量的内积<br/>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"per_code\"></highlightjs>\r\n  </el-card>\r\n\r\n  </template>\r\n<script setup>\r\nvar per_code=`#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int N = 1e5+10;\r\nint n,p,len;\r\nint a[N];\r\nint main(){\r\n    cin>>n>>p;\r\n    for(int i = 0 ; i < n ; i ++)cin>>a[i];\r\n    sort(a,a+n);//注意sort用法  默认从小到大  从大到小：sort(num,num+10,greater<int>());\r\n    for(int i=0,j=0;i<n;i++){\r\n        while(a[j]*p>a[i]&&j<n) j++;\r\n        len=max(len,i-j+1);\r\n    }\r\n    printf(\"%d\",len);\r\n    return 0;\r\n}`\r\nvar mod_code=`for(int i=0;i<n;i++)\r\n    {\r\n        int j=i+1;\r\n        while(j<n&&check(j)\r\n        {\r\n            //具体操作\r\n        }\r\n    }`\r\nvar xiangliang_code =`#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> PII;\r\n\r\nint n,a,b;\r\nvector<PII> u,v;\r\n\r\nint main(){\r\n\r\n    //添加数据\r\n    cin>>n>>a>>b;\r\n    while(a--){\r\n        int k,val;\r\n        cin>>k>>val;\r\n        u.push_back(make_pair(k,val));\r\n    }\r\n    while(b--){\r\n        int k,val;\r\n        cin>>k>>val;\r\n        v.push_back(make_pair(k,val));\r\n    }\r\n\r\n    //双指针算法\r\n    ll res = 0;\r\n    int i=0,j=0;\r\n    while(i<u.size() && j<v.size()){\r\n        if(u[i].first == v[j].first){\r\n            res+=(ll)u[i].second*v[j].second;\r\n            i++,j++;\r\n        }\r\n        else if(u[i].first < v[j].first) i++;\r\n        else j++;\r\n    }\r\n    cout<<res<<endl;\r\n\r\n    return 0;\r\n}\r\n\r\n`\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./ij.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ij.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//字符串哈希</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;algorithm&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">typedef</span> <span class=\"cm-variable-3\">unsigned</span> <span class=\"cm-variable-3\">long</span> <span class=\"cm-variable-3\">long</span> <span class=\"cm-variable\">ULL</span>; <span class=\"cm-comment\">// 0 ~ 2^64 - 1, 溢出相当于取模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">100010</span>, <span class=\"cm-variable\">P</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">131</span>; <span class=\"cm-comment\">// P 取 131 或 13331 为经验值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>, <span class=\"cm-variable\">m</span>; <span class=\"cm-comment\">// n字符串长度</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">N</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// h[i] 存的是长度为 i 的前缀子字符串 的哈希值, p[i]存的是 P^i</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">ULL</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">N</span>];<span class=\"cm-comment\">//h[0]=0</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">ULL</span> <span class=\"cm-def\">getHash</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">l</span>, <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">r</span>) { <span class=\"cm-comment\">// O(1)时间 计算字符串str 下标为[l, r] 的子字符串 哈希值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// 注意 h[i] 存的是 字符串str 中 长度为 i 的 的 前缀 子字符串的 哈希值, i ~ [1, n]</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// // str 的下标范围是 [0, n - 1], 哈希表h[i]的下标 与 字符串str的下标 存在 1 的差值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// return h[r + 1] - h[l - 1 + 1] * p[r - l + 1]; // h[r] - h[l - 1] 注意 下标 + 1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// 如果程序一开始 str = ' ' + str, 或者 scanf(\"%s\", str + 1)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// 即 str 的有效字符下标 为 [1, n] 和 哈希表h[i]的有效下标 [1, n]对应, 不存在差值 1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">r</span>] <span class=\"cm-operator\">-</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">l</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>] <span class=\"cm-operator\">*</span> <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">r</span> <span class=\"cm-operator\">-</span> <span class=\"cm-variable\">l</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>()</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">n</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">m</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// O(n)预处理计算 n个前缀子字符串哈希值. h[i] 存的是长度为 i 的前缀子字符串 的哈希值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// scanf(\"%s\", str); // 这里 str, getHash 里 return h[r + 1] - h[l - 1 + 1] * p[r - l + 1];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// for (int i = 1; i &lt;= n; i ++ )</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">// &nbsp; &nbsp; h[i] = h[i - 1] * P + str[i - 1]; // 如果 原字符串 没有做处理的话, 这里是 str[i - 1]</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%s\"</span>, <span class=\"cm-variable\">str</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">1</span>); <span class=\"cm-comment\">// 这里 str + 1, getHash 里 return h[r] - h[l - 1] * p[r - l + 1];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span> ) </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">h</span>[<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>] <span class=\"cm-operator\">*</span> <span class=\"cm-variable\">P</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">i</span>]; <span class=\"cm-comment\">// 加了scanf(\"%s\", str+1) 或 str=' '+str的话,这里str[i]</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">p</span>[<span class=\"cm-number\">0</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>; <span class=\"cm-comment\">// p[i]存的是 P^i</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span> ) <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>] <span class=\"cm-operator\">*</span> <span class=\"cm-variable\">P</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span> (<span class=\"cm-variable\">m</span> <span class=\"cm-operator\">--</span> ) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">l1</span>, <span class=\"cm-variable\">r1</span>, <span class=\"cm-variable\">l2</span>, <span class=\"cm-variable\">r2</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d%d%d\"</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">l1</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">r1</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">l2</span>, <span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">r2</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">getHash</span>(<span class=\"cm-variable\">l1</span>, <span class=\"cm-variable\">r1</span>) <span class=\"cm-operator\">==</span> <span class=\"cm-variable\">getHash</span>(<span class=\"cm-variable\">l2</span>, <span class=\"cm-variable\">r2</span>)) <span class=\"cm-variable\">puts</span>(<span class=\"cm-string\">\"Yes\"</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">puts</span>(<span class=\"cm-string\">\"No\"</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1465px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 1465px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./stringHash.vue?vue&type=template&id=55f42f4f\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//trie树，用于存字符串</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//tria树 字典树 用于高效存储和查找字符串集合</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">2e5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//全部变量不赋初值默认初值为0，局部变量必须赋初值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//下表为0的点 既是空结点也是头结点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">N</span>][<span class=\"cm-number\">26</span>];<span class=\"cm-comment\">//本题字典为26个小写英文字母，所以第二维只需26个大小空间，N为数据规模（存在空间浪费，可以在MAIN里定义），int是映射来的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">cnt</span>[<span class=\"cm-variable\">N</span>],<span class=\"cm-variable\">idx</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">N</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/*插入操作*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">insert_tria</span>(<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">str</span>[]){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">p</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">i</span>]; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){<span class=\"cm-comment\">//字符串以\\0结尾 这就可以作为判断条件</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">u</span> &nbsp;<span class=\"cm-operator\">=</span> <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">i</span>]<span class=\"cm-operator\">-</span> <span class=\"cm-string\">'a'</span>;<span class=\"cm-comment\">//将26个字母映射成数字</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-operator\">!</span><span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">p</span>][<span class=\"cm-variable\">u</span>])<span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">p</span>][<span class=\"cm-variable\">u</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-operator\">++</span><span class=\"cm-variable\">idx</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">p</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">p</span>][<span class=\"cm-variable\">u</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cnt</span>[<span class=\"cm-variable\">p</span>] <span class=\"cm-operator\">++</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/*询问查找操作 返回存储多少次这个字符串*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">query_tria</span>(<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">str</span>[]){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">p</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">i</span>];<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">u</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">str</span>[<span class=\"cm-variable\">i</span>] &nbsp;<span class=\"cm-operator\">-</span> <span class=\"cm-string\">'a'</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-operator\">!</span><span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">p</span>][<span class=\"cm-variable\">u</span>])<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span> ;<span class=\"cm-comment\">//挨个查，没有就是没有这个字符串</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">p</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">son</span>[<span class=\"cm-variable\">p</span>][<span class=\"cm-variable\">u</span>];<span class=\"cm-comment\">//挨个查 的 移动过程</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">cnt</span>[<span class=\"cm-variable\">p</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">n</span><span class=\"cm-operator\">--</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">op</span>[<span class=\"cm-number\">2</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%s%s\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">op</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">str</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">op</span>[<span class=\"cm-number\">0</span>]<span class=\"cm-operator\">==</span><span class=\"cm-string\">'I'</span>)<span class=\"cm-variable\">insert_tria</span>(<span class=\"cm-variable\">str</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">printf</span>(<span class=\"cm-string\">\"%d\\n\"</span>, <span class=\"cm-variable\">query_tria</span>(<span class=\"cm-variable\">str</span>));</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1203px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 1203px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./trieTree.vue?vue&type=template&id=7a75a400\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//并查集</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//并查集。每个节点存储他的父节点，即p[x]表示x的父节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//如何判断树根：if(p[x]==x)</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//如何求x的集合编号：while(p[x]!=x)x=p[x];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//如何合并两个集合：px时x的集合编号，py是y的集合编号。p[x]=y</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1E5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;<span class=\"cm-comment\">//数据规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>,<span class=\"cm-variable\">m</span>;<span class=\"cm-comment\">//n个数 m个操作</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">N</span>];<span class=\"cm-comment\">//父亲数组，初始时每个数 都各自是 一个集合 判断是否是树根的方法就是p[x] == x</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/*并查集核心操作 find函数（使用路径压缩优化）*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">find</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">x</span>] <span class=\"cm-operator\">!=</span> <span class=\"cm-variable\">x</span>)<span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">x</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">find</span>(<span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">x</span>]);<span class=\"cm-comment\">//只要不是树根，递归地网上找树根，并给路径上的每个结点都修改它的父亲结点为根节点（路径压缩）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">x</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">n</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">m</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span> ;<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;=</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">i</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">m</span><span class=\"cm-operator\">--</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">op</span>[<span class=\"cm-number\">2</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>,<span class=\"cm-variable\">b</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%s%d%d\"</span>,<span class=\"cm-variable\">op</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">a</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">b</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">op</span>[<span class=\"cm-number\">0</span>]<span class=\"cm-operator\">==</span><span class=\"cm-string\">'M'</span>)<span class=\"cm-variable\">p</span>[<span class=\"cm-variable\">find</span>(<span class=\"cm-variable\">a</span>)]<span class=\"cm-operator\">=</span> <span class=\"cm-variable\">find</span>(<span class=\"cm-variable\">b</span>);<span class=\"cm-comment\">//集合合并操作：将a,b所在集合合并</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span>{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">find</span>(<span class=\"cm-variable\">a</span>) <span class=\"cm-operator\">==</span> <span class=\"cm-variable\">find</span>(<span class=\"cm-variable\">b</span>))<span class=\"cm-variable\">puts</span>(<span class=\"cm-string\">\"Yes\"</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">puts</span>(<span class=\"cm-string\">\"No\"</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 994px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 994px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./unionFind.vue?vue&type=template&id=14311a63\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//滑动窗口</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;deque&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e6</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">N</span>],<span class=\"cm-variable\">ans</span>[<span class=\"cm-variable\">N</span>],<span class=\"cm-variable\">n</span>,<span class=\"cm-variable\">m</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">n</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">m</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span> ; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span> ; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">cin</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">deque</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">q</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span> ; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//1  3  -1  -3  5  3  6  7q的size为0，首先1不进入while，而进入q。两个if不执行（i&lt;m-1且i-m&lt;0）。然后3，由于q.back()（1）比3小，故不进入while，3也进入q，此时为1,3，两个if不执行。-1进入时，由于q.back()（3）比-1大，故删除3，又q.back()（1）比-1大，又删除1，然后执行第二句，-1进入q，第三句不执行，执行第四句，输出-1。此时q里为-1。然后q.back()（-1）比-3大，q：-1，删除-1，插入-3，-3=q.front()！=a[i-m]=1，第一个if不执行，输出-3，此时q里为-3。q.back()（-3）比5小，此时q中为-3,5，输出-3。q.back()（5）比3大，删除5，q内为-3,3，输出-3。q.back()（3）比6小，此时q内为-3,3,6,-3=q.front()==a[i-m]=-3，执行第一个if删除-3，q为3,6，输出3...</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">size</span>()<span class=\"cm-operator\">&amp;&amp;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">back</span>()<span class=\"cm-operator\">&gt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>])<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop_back</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push_back</span>(<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">m</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-number\">0</span><span class=\"cm-operator\">&amp;&amp;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">front</span>()<span class=\"cm-operator\">==</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">m</span>])<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop_front</span>();<span class=\"cm-comment\">//if只有i&gt;=m且队首指针马上要pass窗口的第一个位置时才执行，把窗口的第一个删掉</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-variable\">m</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>)<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">front</span>()<span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-string\">\" \"</span>;<span class=\"cm-comment\">//只有第x（x&gt;=m时）个才会进行输出</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">clear</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span> ; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">size</span>()<span class=\"cm-operator\">&amp;&amp;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">back</span>()<span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>])<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop_back</span>();<span class=\"cm-comment\">//相比上一段，这段只改了这句的&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push_back</span>(<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">m</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-number\">0</span><span class=\"cm-operator\">&amp;&amp;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">front</span>()<span class=\"cm-operator\">==</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span><span class=\"cm-operator\">-</span><span class=\"cm-variable\">m</span>])<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop_front</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-variable\">m</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>)<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">front</span>()<span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-string\">\" \"</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 890px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 890px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./window.vue?vue&type=template&id=39b26e96\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n   <div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//快排 </span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//quick_sort algorithm</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1E6</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">N</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">quick_sort</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">q</span>[],<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">l</span>,<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">r</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//判断边界条件</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">l</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-variable\">r</span>)<span class=\"cm-keyword\">return</span>;<span class=\"cm-comment\">//l&gt;r 没有意义，l=r就一个元素无需排序</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//确定分界点 q[l],q[(l+r)/2],q[r],q[Random]都行</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">q</span>[(<span class=\"cm-variable\">l</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">r</span>)<span class=\"cm-operator\">/</span><span class=\"cm-number\">2</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//设置两个移动指针指向两侧</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">l</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span> , <span class=\"cm-variable\">j</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">r</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//调整区间 左边小于等于x 右边大于等于x</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">j</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">do</span> <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">i</span>]<span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">x</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">do</span> <span class=\"cm-variable\">j</span><span class=\"cm-operator\">--</span>;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">j</span>]<span class=\"cm-operator\">&gt;</span><span class=\"cm-variable\">x</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// &nbsp; &nbsp; &nbsp;  if(i&lt;j)swap(q[i],q[j]);</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">j</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">temp</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">j</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">j</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">i</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">temp</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* swap &lt;--using namespace std给的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* 自己写可以写</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* int temp = q[j];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* q[j] = q[i];</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* q[i] = temp;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=\"cm-comment\">* */</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//递归地解决左右两边</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">quick_sort</span>(<span class=\"cm-variable\">q</span>,<span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">j</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">quick_sort</span>(<span class=\"cm-variable\">q</span>,<span class=\"cm-variable\">j</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>,<span class=\"cm-variable\">r</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>() {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">n</span>);<span class=\"cm-comment\">//多少个数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span> ;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }<span class=\"cm-comment\">//读入n个数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">quick_sort</span>(<span class=\"cm-variable\">q</span>,<span class=\"cm-number\">0</span>,<span class=\"cm-variable\">n</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>);<span class=\"cm-comment\">//快速排序</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span><span class=\"cm-operator\">=</span><span class=\"cm-number\">0</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">n</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">printf</span>(<span class=\"cm-string\">\"%d \"</span>,<span class=\"cm-variable\">q</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 1308px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 1308px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n<highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n    \r\n  </template>\r\n<script setup>\r\nvar code=`//快排 \r\n#include <iostream>\r\nusing namespace std;\r\n//quick_sort algorithm\r\nconst int N = 1E6+10;\r\nint n = 0;\r\nint q[N];\r\n\r\nvoid quick_sort(int q[],int l,int r){\r\n    if(l>=r)return;\r\n    int x = q[(l+r)/2];\r\n    int i = l-1 , j = r+1;\r\n    while(i<j){\r\n        do i++;while(q[i]<x);\r\n        do j--;while(q[j]>x);\r\n        if(i<j){\r\n            int temp = q[j];\r\n            q[j] = q[i];\r\n            q[i] = temp;\r\n        }\r\n    }\r\n    quick_sort(q,l,j);\r\n    quick_sort(q,j+1,r);\r\n}\r\nint main() {\r\n    scanf(\"%d\",&n);//多少个数\r\n    for(int i = 0 ;i<n;i++){\r\n        scanf(\"%d\",&q[i]);\r\n    }\r\n    quick_sort(q,0,n-1);\r\n    for(int i=0;i<n;i++){\r\n        printf(\"%d \",q[i]);\r\n    }\r\n    return 0;\r\n}`\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./quicksort.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./quicksort.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''>\r\n  <pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\">\r\n    <div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused\" lang=\"c++\">\r\n      <div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 665.144px; left: 220.2px;\">\r\n        <textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\">\r\n        </div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//归并排序</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span><span class=\"cm-number\">1E6</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">10</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">N</span>],<span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">N</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">mergeSort</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>[],<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">l</span>,<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">r</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">l</span><span class=\"cm-operator\">&gt;=</span><span class=\"cm-variable\">r</span>)<span class=\"cm-keyword\">return</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">mid</span> <span class=\"cm-operator\">=</span>(<span class=\"cm-variable\">l</span><span class=\"cm-operator\">+</span><span class=\"cm-variable\">r</span><span class=\"cm-operator\">+</span><span class=\"cm-number\">1</span>)<span class=\"cm-operator\">/</span><span class=\"cm-number\">2</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">mergeSort</span>(<span class=\"cm-variable\">a</span>,<span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">mid</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">mergeSort</span>(<span class=\"cm-variable\">a</span>,<span class=\"cm-variable\">mid</span>,<span class=\"cm-variable\">r</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span><span class=\"cm-operator\">=</span><span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">j</span><span class=\"cm-operator\">=</span><span class=\"cm-variable\">mid</span>,<span class=\"cm-variable\">c</span><span class=\"cm-operator\">=</span><span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">mid</span><span class=\"cm-operator\">&amp;&amp;</span><span class=\"cm-variable\">j</span><span class=\"cm-operator\">&lt;=</span><span class=\"cm-variable\">r</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]<span class=\"cm-operator\">&gt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">j</span>])<span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">c</span><span class=\"cm-operator\">++</span>]<span class=\"cm-operator\">=</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">j</span><span class=\"cm-operator\">++</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">c</span><span class=\"cm-operator\">++</span>]<span class=\"cm-operator\">=</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">j</span><span class=\"cm-operator\">&lt;=</span><span class=\"cm-variable\">r</span>)<span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">c</span><span class=\"cm-operator\">++</span>]<span class=\"cm-operator\">=</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">j</span><span class=\"cm-operator\">++</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">while</span>(<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">mid</span>)<span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">c</span><span class=\"cm-operator\">++</span>]<span class=\"cm-operator\">=</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">j</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">&lt;=</span><span class=\"cm-variable\">r</span>;<span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>,<span class=\"cm-variable\">j</span><span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]<span class=\"cm-operator\">=</span><span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">j</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span><span class=\"cm-operator\">&gt;&gt;</span><span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span> ; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">mergeSort</span>(<span class=\"cm-variable\">a</span>,<span class=\"cm-number\">0</span>,<span class=\"cm-variable\">n</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>);</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span> ; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span><span class=\"cm-operator\">++</span>)<span class=\"cm-variable\">printf</span>(<span class=\"cm-string\">\"%d \"</span>,<span class=\"cm-variable\">b</span>[<span class=\"cm-variable\">i</span>]);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 759px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 759px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n <script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./mergesort.vue?vue&type=template&id=bd372dfa\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//vector</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;vector&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">vector</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">a</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//a[0]=a.begin()且a[a.size()]=a.end()</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//遍历：</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span>(<span class=\"cm-keyword\">auto</span> <span class=\"cm-variable\">x</span> : <span class=\"cm-variable\">a</span>)<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">x</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-string\">' '</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//带参数的初始化:</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//初始化size,但每个元素值为默认值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">vector</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">abc</span>(<span class=\"cm-number\">10</span>); &nbsp; &nbsp;<span class=\"cm-comment\">//初始化了10个默认值为0的元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-comment\">//初始化size,并且设置初始值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span><span class=\"cm-variable\">vector</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">cde</span>(<span class=\"cm-number\">10</span><span class=\"cm-variable\">，1</span>); &nbsp; &nbsp;<span class=\"cm-comment\">//初始化了10个值为1的元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 473px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 473px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n\r\n</div>\r\n<highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n\r\n  </template>\r\n<script setup>\r\nvar code=`vector<vector<int> > A;//定义二维vector\r\n  //A.push_back里必须是vector\r\nvector<int> B;\r\nB.push_back(0);\r\nB.push_back(1);\r\nB.push_back(2);\r\nA.push_back(B);\r\nB.clear();\r\nB.push_back(3);\r\nB.push_back(4);\r\nB.push_back(5);\r\nA.push_back(B);\r\n//vector<vector<int> >A中的vector元素的个数\r\nlen = A.size();\r\n//vector<vector<int> >A中第i个vector元素的长度\r\nlen = A[i].size();\r\n//根据前面的插入，可知输出5。\r\nprintf(\"%d\", A[1][2]);\r\n`\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./vector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./vector.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 168.056px; left: 210.8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//deque</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;deque&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">deque</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">q</span>;</span></pre><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push_back</span>(<span class=\"cm-number\">1</span>);<span class=\"cm-comment\">//1</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push_back</span>(<span class=\"cm-number\">2</span>);<span class=\"cm-comment\">//1 2</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">push_front</span>(<span class=\"cm-number\">3</span>);<span class=\"cm-comment\">//3 1 2</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">pop_back</span>();<span class=\"cm-comment\">//3 1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">back</span>();<span class=\"cm-comment\">//为1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">size</span>();<span class=\"cm-comment\">//为2</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">q</span>.<span class=\"cm-variable\">clear</span>();<span class=\"cm-comment\">//清空</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 366px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 366px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./deque.vue?vue&type=template&id=0e7f35ec\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>map</strong></template>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n  </el-card>\r\n\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//map</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//insert()  插入的数是一个pair</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//erase()  输入的是pair或迭代器</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//unordered_set, unordered_map, unordered_multiset, unordered_map,哈希表</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">// &nbsp;  这四个怪怪的大学跟上面类似，但是时间复杂度只要O(1)，更快，但不支持s.lower_bound()/upper_bound()</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//begin()/end()  ++,--返回前驱或后继</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//也支持s.lower_bound()/upper_bound()</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;map&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">map</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">string</span>,<span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">a</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">a</span>[<span class=\"cm-string\">\"yxc\"</span>]<span class=\"cm-operator\">=</span><span class=\"cm-number\">1</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span><span class=\"cm-operator\">&lt;&lt;</span><span class=\"cm-variable\">a</span>[<span class=\"cm-string\">\"yxc\"</span>];<span class=\"cm-comment\">//1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">unordered_multimap</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">string</span>,<span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">a</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 471px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 471px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\nvar code =`  map<char,int> hash;\r\n  hash.insert(make_pair('a',2));\r\n  printf(\"%d\",hash['a']);//2\r\n\r\n\r\n`\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import script from \"./map.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./map.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//memset</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;cstring&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">a</span>[<span class=\"cm-number\">100</span>];</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">memset</span>(<span class=\"cm-variable\">a</span>,<span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>,<span class=\"cm-keyword\">sizeof</span> <span class=\"cm-variable\">a</span>);<span class=\"cm-comment\">//-1,-1,-1,-1,-1.......</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 157px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 157px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./memset.vue?vue&type=template&id=793c24b4\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap CodeMirror-focused\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 560.494px; left: 32.2px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//定义二元组</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">typedef</span> <span class=\"cm-variable\">pair</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span>,<span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">pii</span> ;<span class=\"cm-comment\">//也可以是pair&lt;int , string&gt; pii，即&lt;&gt;里面任取。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">vector</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">pii</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">nums</span>,<span class=\"cm-variable\">res</span> ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//pair的初始化</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">pair</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span> , <span class=\"cm-variable\">string</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">p</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">p</span><span class=\"cm-operator\">=</span><span class=\"cm-variable\">make_pair</span>(<span class=\"cm-number\">10</span>,<span class=\"cm-string\">'yxc'</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">p</span><span class=\"cm-operator\">=</span>{<span class=\"cm-number\">20</span>,<span class=\"cm-string\">'abc'</span>}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//pair也可以存三个元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">pair</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable-3\">int</span>,<span class=\"cm-variable\">pair</span>(<span class=\"cm-variable-3\">int</span>,<span class=\"cm-variable-3\">int</span><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">pp</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">pair</span>.<span class=\"cm-variable\">first</span>();<span class=\"cm-comment\">//第一个元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">pair</span>.<span class=\"cm-variable\">second</span>();<span class=\"cm-comment\">//第二个元素</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//输入</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">r</span> ; </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">scanf</span>(<span class=\"cm-string\">\"%d%d\"</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">l</span>,<span class=\"cm-operator\">&amp;</span><span class=\"cm-variable\">r</span>) ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">nums</span>.<span class=\"cm-variable\">push_back</span>({<span class=\"cm-variable\">l</span>,<span class=\"cm-variable\">r</span>}) ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//auto遍历数组用法</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">for</span>(<span class=\"cm-keyword\">auto</span> <span class=\"cm-variable\">num</span>:<span class=\"cm-variable\">nums</span>) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">} &nbsp;</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 576px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 576px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./pair.vue?vue&type=template&id=c022e440\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded md-focus\" spellcheck=\"false\" lang=\"c++\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//set</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include&lt;set&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//set 和 multiset的区别就是set中一个值只能出现一次，而multiset一个值可以出现多次</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">insert</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">size</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">find</span>();</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">count</span>();<span class=\"cm-comment\">//返回一个数个数</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">erase</span>();<span class=\"cm-comment\">//输入一个数x，删除所有x &nbsp;  输入是迭代器，删除这个迭代器</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//begin()/end()  ++,--返回前驱或后继</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//最核心的两个操作：</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">s</span>.<span class=\"cm-variable\">lower_bound</span>()<span class=\"cm-operator\">/</span><span class=\"cm-variable\">upper_bound</span>()<span class=\"cm-comment\">//前者返回大于等于x的最小的数 &nbsp; 后者返回大于x的最小的数</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 340px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 340px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./set.vue?vue&type=template&id=3ab4bb22\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n\r\n  <div id=\"cesiumContainer\" style=\"width: 100%; height: 100%;\"></div>\r\n \r\n</template>\r\n\r\n  <script setup>\r\nimport { ref, onMounted } from 'vue'\r\n    import \"cesium/Source/Widgets/widgets.css\";\r\n\r\nonMounted(()=>{\r\n    \r\n        Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI4Y2FkYmZlNC0zZTFhLTQzZjgtOTAxMC04ODQ1YWE0NTRiZjAiLCJpZCI6MjE1MzczLCJpYXQiOjE3MTU3NjYwMTR9.mpRLVbgOWVmBAtgdpU68N1S6_UnXYWyALKB_iEwrKf8';\r\n        const viewer = new Cesium.Viewer('cesiumContainer');\r\n        console.log(viewer)\r\n\r\n})\r\n</script>\r\n<style scoped>\r\n    #cesiumContainer{\r\n        widows: 100%;\r\n        height: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        /* overflow: hidden; */\r\n    }\r\n</style>\r\n","import script from \"./second.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./second.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./second.vue?vue&type=style&index=0&id=38433e1a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-38433e1a\"]])\n\nexport default __exports__","<template>\r\n<el-space  wrap size=\"large\">\r\n  \r\n  <el-card style=\"max-width: 600px\">\r\n    <template #header><strong>决策树是什么</strong></template> \r\n    &emsp; &emsp; 是一种常见的机器学习算法，用于分类和回归任务。它通过一系列的决策节点和分支来建立一个树形结构，每个节点代表一个属性测试，每个分支代表一个测试结果，最终的叶子节点表示一个类别标签或者回归值。  \r\n</el-card>\r\n<el-card style=\"max-width: 600px\">\r\n    <template #header><strong>随机森林是什么</strong></template>\r\n    &emsp; &emsp;随机森林（Random Forest）和决策树（Decision Tree）之间有密切的关系，随机森林可以被视为决策树的集成方法之一。\r\n    具体而言，随机森林是通过构建多个决策树并集成它们的预测结果来进行分类或回归的技术。每个决策树都是由对训练数据进行随机抽样和随机特征选择构建而成的。\r\n  </el-card>\r\n  <el-card style=\"max-width: 600px\">\r\n    <template #header><strong>举个例子</strong></template>\r\n    <img\r\n      src=\"../../../../../public/static/pic/decisionTree/overlook.png\"\r\n      style=\"width: 100%\"\r\n    />\r\n  </el-card>\r\n\r\n  <el-card style=\"max-width: 600px\">\r\n    <template #header><strong>决策树的过拟合</strong></template>\r\n    <p v-for=\"o in 4\" :key=\"o\" class=\"text item\">{{ item.guonihe[o-1] }}</p>\r\n  </el-card>\r\n  <el-card style=\"max-width: 600px\">\r\n    <template #header><strong>过拟合举例</strong></template>\r\n    <p v-for=\"o in 3\" :key=\"o\" class=\"text item\">{{ item.niheExamples[o-1] }}</p>\r\n  </el-card>\r\n  <el-card style=\"max-width: 600px\">\r\n    <template #header><strong>Load_Iris数据集介绍</strong></template>\r\n    &emsp; &emsp;Iris数据集在模式识别研究领域应该是最知名的数据集了，有很多文章都用到这个数据集。这个数据集里一共包括150行记录，其中前四列为花萼长度，花萼宽度，花瓣长度，花瓣宽度等4个用于识别鸢尾花的属性，第5列为鸢尾花的类别（包括Setosa，Versicolour，Virginica三类）。也即通过判定花萼长度，花萼宽度，花瓣长度，花瓣宽度的尺寸大小来识别鸢尾花的类别。\r\n  </el-card>\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>随机森林构建步骤</strong></template>\r\n    <p v-for=\"o in 4\" :key=\"o\" class=\"text item\">{{ item.randomForest[o-1] }}</p>\r\n    <highlightjs  language=\"python\" :autodetect=\"false\" :code=\"item.code\">\r\n</highlightjs>\r\n  </el-card>\r\n\r\n</el-space>\r\n      </template>\r\n    <script setup>\r\nimport { reactive } from 'vue';\r\nvar item=reactive({guonihe:[\"1、过度分支：决策树可能在训练集上生成过多的分支，每个分支都对应于数据的特定子集，导致树形结构非常深，并且过于复杂。这可能会导致模型过拟合训练数据，无法泛化到新数据。\"\r\n,\"2、忽略噪声：决策树可能会在训练集中过度关注噪声或异常值，试图适应这些数据，而忽略了真实数据的潜在模式。这会导致模型在未来遇到新数据时表现不佳。\",\r\n\"3、特征过度拟合：如果训练数据中的特征数量过多，决策树可能会试图使用所有特征进行拟合，即使一些特征与目标变量没有实际关联。这可能导致模型在真实数据上表现不佳。\",\r\n\"4、训练数据不足：当训练数据量不足时，决策树可能会过拟合现有数据，因为它无法捕获数据的真实分布。这尤其在数据维度高或特征数量多的情况下容易发生。\",\r\n\"5、未进行合适的剪枝：如果没有进行适当的剪枝操作，决策树可能会在训练集上过拟合，剪枝是一种减少树的复杂度、防止过拟合的技术。\"\r\n],\r\nniheExamples:[\"1、医学诊断：假设用于医学诊断的决策树模型在训练时对训练集上的医疗数据进行了过度拟合。例如，模型可能会过于依赖某些不太常见的症状，而忽略了更为常见但不是那么显著的症状，导致在实际临床应用中性能不佳。\",\r\n,\"2、金融风险评估：决策树在金融领域常用于风险评估。然而，如果模型在训练过程中过度依赖于一些不太常见的风险指标或者特定的市场情况，而忽略了更普遍的经济指标或者风险因素，那么它可能无法准确地评估真实的风险水平。\"\r\n,\"3、客户细分：假设一个零售企业使用决策树来对客户进行细分，以制定个性化的营销策略。如果决策树在训练过程中过度拟合了少数高价值客户的行为模式，而忽略了大多数普通客户的特征，那么最终的细分结果可能会偏向于高价值客户，而无法满足整体市场的需求。\"\r\n],\r\nrandomForest:[\"1、随机抽样：从训练数据集中随机选择一定数量的样本，允许重复选择（有放回抽样），用于训练每棵决策树。\",\r\n\"2、随机特征选择：对于每个决策树的每个节点，随机选择一定数量的特征进行考虑，而不是使用全部特征。这有助于提高模型的多样性，减少过拟合的风险。\",\r\n\"3、构建决策树：针对每个随机抽样的数据子集和随机选择的特征子集，构建一棵决策树。在构建过程中，使用信息增益、基尼系数等指标选择最佳的属性进行节点分裂，直到达到树的最大深度或者节点中的样本属于同一类别。\",\r\n\"4、集成预测：对于分类任务，通过对每棵决策树的预测结果进行投票或取平均值来确定最终的分类结果。对于回归任务，可以取所有决策树的预测值的平均值作为最终的预测结果。\"]\r\n,code:`# 导入必要的库\r\nfrom sklearn.ensemble import RandomForestClassifier  # 导入随机森林分类器\r\nfrom sklearn.datasets import load_iris  # 导入鸢尾花数据集\r\nfrom sklearn.model_selection import train_test_split  # 导入数据集划分函数\r\nfrom sklearn.metrics import accuracy_score  # 导入准确率评估指标\r\n\r\n# 加载鸢尾花数据集\r\niris = load_iris()\r\n\r\n# 将数据集划分为训练集和测试集\r\nX_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)\r\n\r\n# 初始化随机森林分类器，并设置参数\r\nrf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\r\n\r\n# 在训练集上拟合随机森林模型\r\nrf_classifier.fit(X_train, y_train)\r\n\r\n# 在测试集上进行预测\r\npredictions = rf_classifier.predict(X_test)\r\n\r\n# 计算模型的准确率\r\naccuracy = accuracy_score(y_test, predictions)\r\nprint(\"Accuracy:\", accuracy)\r\n`}\r\n)\r\n    </script>\r\n      <style  scoped>\r\n    \r\n      </style>\r\n      ","import script from \"./decisionTree.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./decisionTree.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>Html tips</strong></template>\r\n    &emsp;&emsp;&emsp;{{ a.huanhang }}&emsp;————>&emsp;换行<br/>\r\n    &emsp;&emsp;&emsp;{{ a.dakonggge }}&emsp;————>&emsp;大空格<br/>\r\n    &emsp;&emsp;&emsp;{{ a.xiaokongge }}&emsp;————>&emsp;小空格<br/>\r\n    &emsp;&emsp;&emsp;{{ a.bold }}&emsp;————>&emsp;字体加粗<br/>\r\n  </el-card>\r\n\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>Alg tips</strong></template>\r\n  </el-card>\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>程序何时输出</strong></template>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n  </el-card>\r\n  <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code2\"></highlightjs>\r\n\r\n</template>\r\n<script setup>\r\nimport { reactive } from 'vue';\r\nvar a=reactive({huanhang:\"<br/>\",dakonggge:\"&emsp;\",xiaokongge:\"&nbsp;\",bold:\"<strong>\"})\r\nvar code1=`#include<iostream>\r\n#include<sstream>\r\nusing namespace std;\r\nint n;\r\nint main()\r\n{\r\n    while(scanf(\"%d\",&n)!=EOF)//while(cin>>n){}\r\n    {\r\n    }\r\n}`\r\nvar code2=`import { ref, onMounted } from 'vue'\r\n\r\nonMounted(()=>{\r\n\r\n})`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>\r\n  ","import script from \"./remender.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./remender.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./webs.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./webs.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n  </el-card>\r\n</template>\r\n<script setup>\r\nvar code =`#include <iostream>\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 10;\r\n\r\nint stk[N],tt;\r\n//插入\r\nstk[++ tt]=x;\r\n\r\n//弹出\r\ntt--;\r\n\r\n//判断栈是否为空\r\nif(tt>0)  not empty\r\nelse empty\r\n\r\n//栈顶\r\nstk[tt]`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>","import script from \"./stack.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./stack.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n  </el-card>\r\n</template>\r\n<script setup>\r\nvar code =`#include <iostream>\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 10;\r\n//在队尾插入元素，队头删除元素\r\nint q[N],hh,tt=-1;//hh表示队头，tt表示队尾(tt可以是0，也可以是-1，看个人习惯)\r\n\r\n//插入\r\nq[++tt]=x;\r\n\r\n//弹出\r\nhh++;\r\n\r\n//判空\r\nif(hh<=tt) not empty;\r\nelse empty;\r\n\r\n//取出队头元素\\队尾元素\r\nq[hh];q[tt];`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>","import script from \"./queue.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./queue.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n        <el-card style=\"max-width: 1200px\">\r\n            <template #header><strong>阅前须知（拉链法）:</strong></template>\r\n            <el-text>\r\n                1、多个数映射到较少数，多数都是直接mod映射。有开放寻址法和拉链法。<br/>\r\n                2、拉链法：先开一个数组来存储哈希值，例如映射方法是x mod 10^5，则开一个10^5长度的数组<br/>\r\n                        这个数组每一个位置看做一个槽，每个槽上都拉一条链，用来存储这个槽上当前已经有的所有的数。<br/>\r\n                        例如：第一次11映射到3的位置，23也映射到3，则3下面有11→23。<br/>\r\n                3、一般哈希表只有添加和查找，不会有删除。<br/>\r\n                <strong>查找：</strong>先看x在哪个槽上，再看槽对应的单链表里面存不存在x就行<br/>\r\n                <strong>添加：</strong>比如要添加x，先求一下h(x)，看一下x对应哪个槽，然后把x插到槽对应的链上（单链表<br/>\r\n                <strong>删除（如果非要）：</strong>在槽对应的链上的x处打上bool标记删除。不是真的删除。<br/>\r\n                注意：一般模的数要取质数<br/>\r\n\r\n                首先预习数组模拟单链表的插入操作：e[idx]=x;ne[idx]=head;head=idx++;<br/>\r\n                先给点赋值，再让他指向head原本指向的点，head现在指向第一个元素了之后，再让idx++，为下一个元素插入做准备<br/>\r\n                （初始化：head=-1，idx=0）<br/>\r\n            </el-text>\r\n            <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"link_code\"></highlightjs>\r\n      </el-card>\r\n      <el-card style=\"max-width: 1200px\">\r\n            <template #header><strong>阅前须知（开放寻址法）:</strong></template>\r\n            <el-text>\r\n                开放寻址法只用到了一个一维数组，不用链表。只是这个一维数组要开到N的2-3倍。<br/>\r\n                原理就是h(x)=k的话，先看第k个位置是否被占，如果有则继续找下一个，直到找到空的坑位。<br/>\r\n                <strong>添加：</strong>如上所示<br/>\r\n                <strong>查找：</strong>从第k个前往后找，如果有且是x，则找到，如果有则下一个坑位，如果空则不存在<br/>\r\n                <strong>删除：</strong>从前往后找x，如果找到x，一般不会真的删掉，而是打一个标记x是否存在\r\n            </el-text>\r\n            <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"open_code\"></highlightjs>\r\n\r\n      </el-card>\r\n      \r\n    </template>\r\n    <script setup>\r\n    var link_code =`#include <iostream>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int N=1e5+3;\r\n//槽  链表的值  下一个值  当前用到了哪个位置\r\nint h[N],e[N],ne[N],idx;\r\nvoid insert(int x){\r\n   //x范围：-10^9~10^9\r\n\r\n   //先想一个哈希函数把他映射到0~10^5的任意一个数\r\n   int k = (x%N+N)%N;//k为哈希值  注意，如果是负数的话，他的取模是负数\r\n   \r\n   //插入实际就是当前的点插入h[k]对应的链表上(参考链表头插法)  h[k]上存的是这个链表里面第一个节点的下标 e[i]就是当前这个点   ne[i]就是下一个点\r\n   e[idx]=x,ne[idx]=h[k],h[k]=idx++;\r\n   cout<<\"h[\"<<k<<\"]=\"<<h[k];\r\n}\r\nbool find(int x){\r\n   int k=(x%N+N)%N;//先找到位置\r\n   //再遍历链表\r\n   for(int i = h[k] ; i != -1 ; i = ne[i])\r\n   if(e[i]==x)return true;\r\n   return false;\r\n}\r\nint main(){\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n   memset(h,-1,sizeof(h));\r\n   while(n--)\r\n   {\r\n      char op[2];\r\n      int x;\r\n      scanf(\"%s%d\",op,&x);//一般要用scanf读字符串，因为他可以忽略掉空格、回车、制表符\r\n      //一般不要用scanf读字符（有些数据坑，里面会加额外空格）\r\n      if(op[0]=='I')insert(x);\r\n      else {\r\n         if(find(x))puts(\"Yes\");\r\n         else puts(\"No\");\r\n      }\r\n   }\r\n}\r\n`\r\nvar open_code=`#include <iostream>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int N=2e5+3,null=0x3f3f3f3f;\r\nint h[N];\r\nvoid insert(int x){\r\n  //...\r\n}\r\nint find(int x){//如果x在hash表中存在，返回的是位置;若不存在，返回的是它应该存储的位置\r\n     int k = (x%N+N)%N;\r\n   \r\n   while(h[k] != null && h[k]!= x)\r\n   {\r\n    k++;\r\n    if(k==N)k=0;//如果看到了最后一个坑位，那么就要循环重新从第一个坑位开始看\r\n   }\r\n   return k;\r\n}\r\n\r\nint main(){\r\n   int n;\r\n   scanf(\"%d\",&n);\r\n   memset(h,0x3f,sizeof h);\r\n   while(n--)\r\n   {\r\n      char op[2];\r\n      int x;\r\n      scanf(\"%s%d\",op,&x);\r\n        int k = find(x);\r\n      if(op[0]=='I')h[k]=x;\r\n      else {\r\n         if(h[k]!=null)puts(\"Yes\");\r\n         else puts(\"No\");\r\n      }\r\n   }\r\n}\r\n`\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./hash.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./hash.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>示意图</strong></template>\r\n    初始：head=-1,idx=0;  要插入（头插法）：1,3,2,5,4  最后希望结果：4→5→2→3→1&emsp;&emsp;<el-text tag=\"pub\" size=\"large\">//e[idx]=x;&emsp;ne[idx]=head&emsp;head=idx++;</el-text><br/>\r\n    <strong>add_head=1</strong>:&emsp;   &emsp;e[0]=1,&emsp;ne[0]=-1,&emsp;head=0,&emsp;idx=1<br/>\r\n    <strong>add_head=3</strong>:&emsp;   &emsp;e[1]=3,&emsp;ne[1]=0,&emsp;head=1,&emsp;idx=2<br/>\r\n    <strong>add_head=2</strong>:&emsp;   &emsp;e[2]=2,&emsp;ne[2]=1,&emsp;head=2,&emsp;idx=3<br/>\r\n    <strong>add_head=5</strong>:&emsp;   &emsp;e[3]=5,&emsp;ne[3]=2,&emsp;head=3,&emsp;idx=4<br/>\r\n    <strong>add_head=4</strong>:&emsp;   &emsp;e[4]=4,&emsp;ne[4]=3,&emsp;head=4,&emsp;idx=5<br/>\r\n    最后<br/>\r\n    <strong>e</strong>：1  3  2  5  4<br/>\r\n    <strong>ne</strong>：-1 0 1 2 3<br/>\r\n    <strong>head</strong>=4&emsp;&emsp;  idx=5<br/>\r\n    e[head]=e[4]=4 &emsp;  ne[4]=3 &emsp;  e[3]=5.....符合<br/>\r\n  </el-card>\r\n<div class='typora-export os-windows'><div class='typora-export-content'>\r\n<div id='write'  class=''><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"c++\" style=\"break-inside: unset;\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"c++\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 11.0813px; left: 4px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//数组模拟单链表</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-meta\">#include &lt;iostream&gt;</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">using</span> <span class=\"cm-keyword\">namespace</span> <span class=\"cm-def\">std</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//数组模拟单链表 静态链表</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">const</span> <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">N</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1e5</span> <span class=\"cm-operator\">+</span> <span class=\"cm-number\">10</span>;<span class=\"cm-comment\">//数据规模</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">/* head : 头结点的下标</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* e[i] ： 表示结点i的值</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* ne[i] ： 表示结点i的next</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* idx  : index 即存储当前用到了哪一个点了</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* 数组下表从0开始</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-comment\">* */</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">head</span>, <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">N</span>], <span class=\"cm-variable\">idx</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//对链表进行初始化</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">init</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>;<span class=\"cm-comment\">//最开始的时候，链表的头节点要指向-1，</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//为的就是在后面进行不断操作后仍然可以知道链表是在什么时候结束</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">插句题外话，我个人认为head其实就是一个指针，是一个特殊的指针罢了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">刚开始的时候它负责指向空结点，在链表里有元素的时候，它变成了一个指向第一个元素的指针</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">当它在初始化的时候指向-1，来表示链表离没有内容。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>;<span class=\"cm-comment\">//idx在我看来扮演两个角色，第一个是在一开始的时候，作为链表的下标，让我们好找</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//第二在链表进行各种插入，删除等操作的时候，作为一个临时的辅助性的所要操作的元素的下</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//标来帮助操作。并且是在每一次插入操作的时候，给插入元素一个下标，给他一个窝，感动！</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">再次插句话，虽然我们在进行各种操作的时候，元素所在的下标看上去很乱，但是当我们访问的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">时候，是靠着指针，也就是靠ne[]来访问的，这样下标乱，也就我们要做的事不相关了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">另外，我们遍历链表的时候也是这样，靠的是ne[]</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将x插入到头节点上</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">int_to_head</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>){<span class=\"cm-comment\">//和链表中间插入的区别就在于它有head头节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">x</span>;<span class=\"cm-comment\">//第一步，先将值放进去</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">head</span>;<span class=\"cm-comment\">//head作为一个指针指向空节点，现在ne[idx] = head;做这把交椅的人换了</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">//先在只是做到了第一步，将元素x的指针指向了head原本指向的</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span>;<span class=\"cm-comment\">//head现在表示指向第一个元素了，它不在是空指针了。（不指向空气了）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">++</span>;<span class=\"cm-comment\">//指针向下移一位，为下一次插入元素做准备。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将x插入到下标为k的点的后面</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">add</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>, <span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">x</span>;<span class=\"cm-comment\">//先将元素插进去</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">idx</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>];<span class=\"cm-comment\">//让元素x配套的指针，指向它要占位的元素的下一个位置</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">idx</span>;<span class=\"cm-comment\">//让原来元素的指针指向自己</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">idx</span> <span class=\"cm-operator\">++</span>;<span class=\"cm-comment\">//将idx向后挪</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">/*</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">为了将这个过程更好的理解，现在</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">将指针转变的这个过程用比喻描述一下，牛顿老师为了省事，想插个队，队里有两个熟人</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">张三和李四，所以，他想插到两个人中间，但是三个人平时关系太好了，只要在一起，就</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">要让后面的人的手插到前面的人的屁兜里。如果前面的人屁兜里没有基佬的手，将浑身不</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">适。所以，必须保证前面的人屁兜里有一只手。（张三在前，李四在后）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">这个时候，牛顿大步向前，将自己的手轻轻的放入张三的屁兜里，（这是第一步）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">然后，将李四放在张三屁兜里的手抽出来放到自己屁兜里。（这是第二步）</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">经过这一顿骚操作，三个人都同时感觉到了来自灵魂的战栗，打了个哆嗦。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-comment\">*/</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-comment\">//将下标是k的点后面的点个删掉</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">remove</span>(<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>] <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">k</span>]];<span class=\"cm-comment\">//让k的指针指向，k下一个人的下一个人，那中间的那位就被挤掉了。</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable-3\">int</span> <span class=\"cm-def\">main</span>(){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">n</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">init</span>();<span class=\"cm-comment\">//初始化</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">0</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">&lt;</span> <span class=\"cm-variable\">n</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">++</span> ) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">char</span> <span class=\"cm-variable\">s</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">s</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'H'</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">int_to_head</span>(<span class=\"cm-variable\">x</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'D'</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">k</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">==</span> <span class=\"cm-number\">0</span>) <span class=\"cm-variable\">head</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">head</span>];<span class=\"cm-comment\">//删除头节点</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">else</span> <span class=\"cm-variable\">remove</span>(<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>);<span class=\"cm-comment\">//注意删除第k个输入后面的数，那函数里放的是下标，k要减去1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">s</span> <span class=\"cm-operator\">==</span> <span class=\"cm-string\">'I'</span>){</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">k</span>, <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">cin</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">k</span> <span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-variable\">x</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">add</span>(<span class=\"cm-variable\">k</span> <span class=\"cm-operator\">-</span> <span class=\"cm-number\">1</span>, <span class=\"cm-variable\">x</span>);<span class=\"cm-comment\">//同样的，第k个数，和下标不同，所以要减1</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">for</span> (<span class=\"cm-variable-3\">int</span> <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">head</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">!=</span> <span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span>; <span class=\"cm-variable\">i</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">ne</span>[<span class=\"cm-variable\">i</span>]) <span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">e</span>[<span class=\"cm-variable\">i</span>] <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-string\">' '</span> ;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-variable\">cout</span> <span class=\"cm-operator\">&lt;&lt;</span> <span class=\"cm-variable\">endl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-number\">0</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\r\n</span></span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 2433px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 2433px;\"></div></div></div></pre><p>&nbsp;</p></div></div>\r\n</div>\r\n    \r\n\r\n  </template>\r\n<script setup>\r\n</script>\r\n  <style  scoped>\r\n\r\n  </style>\r\n  ","import { render } from \"./linkedNodes.vue?vue&type=template&id=36aa1d20\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\n    <template>\r\n\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>string!!</strong></template>\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n  </el-card>\r\n\r\n</template>\r\n<script setup>\r\nvar code=`#include<iostream>\r\n#include<cstring>\r\nusing namespace std;\r\nint main(){\r\n   char s[10]=\"2131213\";\r\n   printf(\"%d\",strlen(s));// 7 printf(\"%d\",as.size());也行\r\n   \r\n   string s;//空，为“”\r\n   s[1];//取s中任意一个字符\r\n   string s1(\"ssss\");//ssss\r\n   string s2(s1);//ssss\r\n   string s3=s2;//ssss\r\n   string s4(10,'c');//cccccccccc\r\n   string s5=\"hiya\";//hiya\r\n   \r\n   //注意，下面这个char和string不一样   string s(chs,n)\r\n   char cs[]=\"12345\";\r\n   string s7(cs,3);//123  前三个\r\n\r\n   //string s(s2,pos2)\r\n   string s8=\"asac\";\r\n   string s9(s8,2);//ac   从第2（0开始）个到最后\r\n\r\n    //string s(s2,pos2,len2)\r\n    string s10=\"qweqweqweq\";\r\n    string s11(s10,3,4);//s4是s3从下标3开始4个字符的拷贝，超过s3.size出现未定义\r\n    printf(\"%s \",s11.c_str());//如果是string，不能printf(\"%s \",s11);，后面的c_str()必须加。如果是char a[10],则可以printf(\"%s \",a);\r\n\r\n\r\n   string s=\"abcdefg\";\r\n\r\n   //s.substr(pos1,n)返回字符串位置为pos1后面的n个字符组成的串\r\n    string s2=s.substr(1,5);//abcde\r\n\r\n    //s.substr(pos)//得到一个pos到结尾的串\r\n    string s3=s.substr(4);//efg\r\n\r\n\r\n\r\n    string str;\r\n    string str2=\"Writing \";\r\n    string str3=\"print 10 and then 5 more\";\r\n    //直接追加一个str2的字符串\r\n    str.append(str2);                       // \"Writing \"\r\n    //后面追加str3第6个字符开始的3个字符串\r\n    str.append(str3,6,3);                   // \"10 \"\r\n    //追加字符串形参的前5个字符\r\n    str.append(\"dots are cool\",5);          // \"dots \"\r\n    //直接添加\r\n    str.append(\"here: \");                   // \"here: \"\r\n\r\n\r\n   string str =\"There are two needles in this haystack with needles.\";\r\n   string str2 =\"needle\";\r\n\r\n    //在str当中查找第一个出现的needle，找到则返回出现的位置，否则返回结尾\r\n    int found = str.find(str2);//14\r\n\r\n\r\n   string s1=\"123\",s2=\"123\";//相同\r\n    cout<<s1.compare(s2)<<endl;//0\r\n\r\n    s1=\"123\",s2=\"1234\";//括号内较大\r\n    cout<<s1.compare(s2)<<endl;//-1\r\n\r\n    s1=\"1234\",s2=\"123\";//括号内较小\r\n    cout<<s1.compare(s2)<<endl;//1\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>\r\n    \r\n    \r\n    ","import script from \"./strings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./strings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>判断质数</strong></template>\r\n        思想：判断n为何数，对于非质数12,3和4都是他的因子，因子都是成对出现的，因此我们只需要估计较小的那个，即从2到sqrt(n)，判断每个数是否是他的因子即可。以下代码为y总优化版本。\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n      </el-card>\r\n      <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>判断质数（法二）</strong></template>\r\n        思想：利用了一个原理：除2、3外的任何质数，除以6的余数一定是1或5。\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code2\"></highlightjs>\r\n      </el-card>\r\n      \r\n    </template>\r\n    <script setup>\r\n    var code1=`bool is_prime(int n){\r\n    if(n < 2) return false;\r\n    for(int i = 2;i <= n / i;i ++){ //优化内容\r\n        if(n % i == 0){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}`\r\n    var code2=`#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\nconst int N=103;\r\nint is_prime(int a)\r\n{\r\n\tif(a==1)return 0;\r\n\tif(a==2||a==3)return 1;\r\n\tif(a%6!=1&&a%6!=5)return 0;\r\n\tfor(int i=5;i<=sqrt(a);i+=6)\r\n      \tif(a%i==0||a%(i+2)==0)return 0;\r\n\treturn 1;\r\n}`\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./zhishu.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./zhishu.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>前缀和</strong></template>\r\n        要算从a到b的合数数，只需s[b]=s[a-1]\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n      </el-card>\r\n     \r\n      \r\n    </template>\r\n    <script setup>\r\n    var code1=`  for (int i = 2; i <= n; i ++ )\r\n    {\r\n        s[i] = s[i - 1];           // 统计前i项的合数的数量\r\n        if (st[i]) s[i] ++;        // 如果st[i] = 1表示是合数，s[i]的值就 + 1\r\n    }`\r\n  \r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./qianzhuihe.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./qianzhuihe.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>质数筛，朴素筛法(已经第一次优化)</strong></template>\r\n        acwing.3701<br/>思想：<br/>i从2开始，每次删除i的所有倍数，第一次：<br/>2&emsp; 3&emsp; 4&emsp; 5&emsp; 6&emsp; 7&emsp; 8&emsp; 9 &emsp;10 &emsp;11&emsp; 12\r\n        <br/>2&emsp; 3&emsp; *&emsp; 5&emsp; *&emsp; 7&emsp; *&emsp; 9 &emsp;* &emsp;11&emsp; *\r\n        <br/>2&emsp; 3&emsp; *&emsp; 5&emsp; *&emsp; 7&emsp; *&emsp; & &emsp;* &emsp;11&emsp; *\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n      </el-card>\r\n      <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>线性质数筛（不是很会）</strong></template>\r\n        \r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code2\"></highlightjs>\r\n      </el-card>\r\n      \r\n    </template>\r\n    <script setup>\r\n    var code1=`#include<stdio.h>\r\nconst int N =1E6+10;\r\nint st[N];//代表N是否已被筛掉\r\nint primes[N],cnt;//primes代表从第一个到最后一个的质数值\r\nint main(){\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    for(int i = 2 ; i <= n ; i ++)\r\n        if(!st[i])\r\n        {\r\n            primes[cnt++]=i;\r\n            for(int j = i+i ; j <=n;j+=i)st[j]=1;\r\n        }\r\n    printf(\"%d\",cnt);\r\n\r\n}\r\n`\r\n    var code2=`int linear_sieve_prime(int n){\r\n    // n只会被最小质因子筛去\r\n    for(int i =2 ;i <=n;i++){\r\n        if(!st[i])primes[cnt++] = i;\r\n        for(int j = 0;primes[j]<=n/i;j++){\r\n            st[primes[j]*i] = 1;\r\n            if(i % primes[j] == 0)break;\r\n        }\r\n    }\r\n    return cnt;\r\n}`\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./shaifa.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./shaifa.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>定义们</strong></template>\r\n    \r\n    \r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code1\"></highlightjs>\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code2\"></highlightjs>\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code6\"></highlightjs>\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code3\"></highlightjs>\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code4\"></highlightjs>\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code5\"></highlightjs>\r\n\r\n    \r\n      </el-card>\r\n    \r\n    </template>\r\n    <script setup>\r\n    var code1=`typedef long long  ll;\r\n    ll a;`\r\n    var code2=`\r\n    //printf同理\r\n    scanf(\"%lld\",&a);//-9223372036854775808～+9223372036854775807\r\n    scanf(\"%ld\",&a);//-2147483648～+2141483647\r\n    `\r\n    var code3=`     \r\n    //以下为c语言：\r\n    //int类型转为char\r\n    int a=10;\r\n    char c=a+'0';\r\n    //char类型转为int\r\n    char b='5';\r\n    int c=b-'0';\r\n    //字符串转数字\r\n    char str[]=“1234”;\r\n    int a=atoi(str);\r\n`\r\nvar code4=`\r\n//以下为c++\r\n//数字转字符串\r\nint i = 42;\r\nstring s = to_string(i);\r\n\r\nint stoi(const strings str, size_t* pos = 0, int base = 10)\r\nlong stol(const strings str, size_t* pos = 0, int base = 10)\r\nfloat stof(const strings str, size_t* pos = 0)\r\ndouble stod(const strings str, size_t* pos = 0)`\r\nvar code5=`\r\n#define not !\r\n#define and &&\r\n#define or ||\r\n//之后就可以用not，and，or了，挺有趣的`\r\nvar code6=`#define MAX_N 100\r\nchar a[MAX_N],b[MAX_N];\r\nscanf(\"%s%s\",&a,&b);//注：scanf不能接受带空格的字符串，例如：123 414 141，只会收到123，遇空格就停止\r\n\r\nchar a[256]={0};\r\ngets(a);\r\n\r\n\r\nwhile((ch=getchar())!='\\n')//一直接收缓冲区输出\r\n\r\n\r\nchar string[10]; \r\n  char *str1=\"abcdefghi\"; \r\n  strcpy(string,str1); //string变为str1\r\n  \r\n  puts(str1);\r\n  \r\n  \r\n  char buffer[80];\r\n  strcpy(buffer,\"Hello \"); \r\n  strcat(buffer,\"world\"); //char* strcat(char * str1,char * str2); 把字符串str2接到str1后面,str1最后的'\\0'被取消 \r\n`\r\nvar code6=`\r\n//c语言的宏定义不能const int N=10;int a[N];C++才可以。c语言应如下：（没有分号）\r\n#define N 100`\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./alg.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./alg.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>最长回文（基本方法）</strong></template>\r\n        思想：有两种回文，一种是\"bb\"型，一种是\"aba\"型，所以要两种。从中间开始扩散的思想。\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code_normal\"></highlightjs>\r\n      </el-card>\r\n      <el-divider></el-divider>\r\n      <el-card style=\"max-width: 1200px;\">\r\n        <template #header><strong>最长回文（dp方法）</strong></template>\r\n        -<strong>思想：</strong>对于任何回文，去掉头尾依然是回文，所以它具有天然的状态转移性。如果一个子串的两头相等，我们就要看他们中间的是不是回文就行。<br/>\r\n        -<strong> 状态：</strong>dp[i][j]表示子串s[i...j]是否是回文子串<br/>\r\n        -因此得到<strong>状态转移方程：</strong>dp[i][j]<el-text type=\"danger\" tag=\"mark\" size=\"Large\">=</el-text>(s[i]==s[j])and dp[i+1][j-1]<br/>\r\n        &nbsp;边界条件：{{shi}}，整理得 j - i < 3（也就是只有当中间长度小于等于2时）<br/>\r\n        -<strong> 初始化：</strong>dp[i][i] = true<br/>\r\n        -<strong> 输出：</strong>在得到一个状态的值为true的时候，记录起始位置和长度，填表完成以后再截取<br/>\r\n        -<strong>例如：</strong>字符babab，下标为01234，由于dp[i][j]参考左下方的值，故先升序填列，再升序填行。<br/>\r\n        <el-table :data=\"tableData\" style=\"margin-left: 350px;\">\r\n      <el-table-column type=\"index\" />\r\n      <el-table-column prop=\"flag0\" label=\"0\" width=\"70\" />\r\n      <el-table-column prop=\"flag1\" label=\"1\" width=\"70\" />\r\n      <el-table-column prop=\"flag2\" label=\"2\" width=\"70\"/>\r\n      <el-table-column prop=\"flag3\" label=\"3\" width=\"70\"/>\r\n      <el-table-column prop=\"flag4\" label=\"4\" width=\"70\"/>\r\n    </el-table><br/>\r\n    这个表的意思是先把表的主对角线填入TRUE，因为单个都为回文。左边的01234表示i，右边的01234表示j，（0,1）表示从0到1的子串（长度为2）是否为回文。\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code_dp\"></highlightjs>\r\n      </el-card>\r\n    </template>\r\n    <script setup>\r\n        var code_normal=`class Solution {\r\npublic:\r\n    string longestPalindrome(string s) {\r\n        string res;\r\n        for (int i = 0; i < s.size(); i ++ ) {\r\n            int l = i - 1, r = i + 1;\r\n            while (l >= 0 && r < s.size() && s[l] == s[r]) l --, r ++ ;\r\n            if (res.size() < r - l - 1) res = s.substr(l + 1, r - l - 1);\r\n\r\n            l = i, r = i + 1;\r\n            while (l >= 0 && r < s.size() && s[l] == s[r]) l --, r ++ ;\r\n            if (res.size() < r - l - 1) res = s.substr(l + 1, r - l - 1);\r\n        }\r\n\r\n        return res;\r\n    }\r\n};\r\n`\r\nvar code_dp=`class Solution {\r\n    public String longestPalindrome(String s) {\r\n        if(s == null || s.length() == 0) {\r\n            return \"\";\r\n        }\r\n\r\n        int n = s.length();\r\n        boolean[][] isPalindrome = new boolean[n][n];\r\n\r\n        for(int i = 0; i < n; i++) {\r\n            isPalindrome[i][i] = true;\r\n        }\r\n\r\n        for(int j = 0; j < n; j++) {\r\n            for(int i = j - 1; i >= 0; i--) {\r\n                if(j - i == 1) {\r\n                    isPalindrome[i][j] = (s.charAt(i) == s.charAt(j));\r\n                } else {\r\n                    isPalindrome[i][j] = isPalindrome[i + 1][j - 1] && (s.charAt(i) == s.charAt(j));\r\n                }\r\n            }\r\n        }\r\n\r\n        String res = \"\";\r\n        for(int i = 0; i < n; i++) {\r\n            for(int j = i; j < n; j++) {\r\n                if(isPalindrome[i][j] && j - i + 1 > res.length()) {\r\n                    res = s.substring(i, j + 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n}\r\n`\r\nvar shi=\"j - 1 - ( i + 1 ) + 1 < 2\"\r\n  const tableData = [\r\n    {\r\n      flag0:'TRUE',\r\n      flag1:'FALSE',\r\n      flag2:'TRUE',\r\n      flag3:'FALSE',\r\n      flag4:'TRUE',\r\n    },\r\n    {\r\n      flag0:'',\r\n      flag1:'TRUE',\r\n      flag2:'FALSE',\r\n      flag3:'TRUE',\r\n      flag4:'FALSE',\r\n    }, {\r\n      flag0:'',\r\n      flag1:'',\r\n      flag2:'TRUE',\r\n      flag3:'FALSE',\r\n      flag4:'TRUE',\r\n    }, {\r\n      flag0:'',\r\n      flag1:'',\r\n      flag2:'',\r\n      flag3:'TRUE',\r\n      flag4:'FALSE',\r\n    }, {\r\n      flag0:'',\r\n      flag1:'',\r\n      flag2:'',\r\n      flag3:'',\r\n      flag4:'TRUE',\r\n    },\r\n  ]\r\n    </script>\r\n    <style  scoped>\r\n\r\n    </style>","import script from \"./zuichanghuiwen.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./zuichanghuiwen.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./leftMenu_questions.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./leftMenu_questions.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./leftMenu_questions.vue?vue&type=style&index=0&id=250bdbe4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-250bdbe4\"]])\n\nexport default __exports__","import script from \"./questions.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./questions.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>梯度下降算法</strong></template>\r\n        深度学习最重要的就是梯度下降算法。例如预测房价，假设m个点 &lt; xi,yi&gt;代表房屋面积和房价。现在假设xy坐标系为一条直线\r\n        ，设y=wx+b，损失J=\r\n        <vue-latex :expression=\"'\\\\frac{1}{2m} \\\\sum (\\\\bigtriangleup y)^{ 2} '\" display-mode :font-size=\"30\"/>，带入这里就是\r\n        J=<vue-latex :expression=\"'\\\\frac{1}{2m} \\\\sum [yi-(w\\\\bullet xi+b)]^{ 2}'\" display-mode :font-size=\"30\"/> 求\r\n        <vue-latex :expression=\"'\\\\frac{\\\\partial J}{\\\\partial w} \\\\rightleftharpoons w_{n+1} =w_{n}-\\\\eta \\\\frac{\\\\partial J}{\\\\partial w}'\" display-mode :font-size=\"30\"/> \r\n        即从w1，我可以找到比这个w1更好的w2，w2还是不够，那就继续计算，最终找到最优化的w，直到<vue-latex :expression=\"'\\\\frac{\\\\partial J}{\\\\partial w}'\"  :font-size=\"20\"/>=0或者直到<vue-latex :expression=\"'\\\\w_{n+1}\\\\approx  w_{n}'\"  :font-size=\"20\"/>\r\n        这个时候就不需要迭代了，我们找到了最优解。事实上刚才只考虑到了w，还有一个b，真正运用是w和b同时进行优化的。房价有可能取决于\r\n        很多种因素，把这些因素记为<vue-latex :expression=\"'x_{1}, x_{2},x_{3}... x_{n}'\"  :font-size=\"20\"/>，这样一来你可能就会发现房价是这样一个函数：\r\n        <vue-latex :expression=\"'y=w_{1}x_{1}+w_{2}x_{2}+w_{3}x_{3}... w_{n}x_{n}+b '\" display-mode :font-size=\"30\"/>被称为回归的分析。除此之外还有分类的\r\n        分析。也就是比如给你一堆肿瘤的照片，你来区分哪些是良性哪些是恶性。\r\n    </el-card>\r\n    <div style=\"height: 30px;\"></div>\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>神经网络</strong></template>\r\n        \r\n        <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n            <el-col :span=\"9\"><img src=\"../../assets/pics/science/shenjingwangluo.png\"></el-col>\r\n            <el-col :span=\"9\"><div style=\"height: 100px;\"></div>如左图所示是神经网络最经典的一个图。输入层多个输入，但只有一个输出。因为注意从输入层到输出层，是多个输入对应一个输出。</el-col>\r\n        </el-row>\r\n        <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n            <el-col :span=\"9\"><img src=\"../../assets/pics/science/sigmoidhanshu.png\"><vue-latex :expression=\"'f(y)=\\\\frac{1}{1+e^{-y} } '\" display-mode :font-size=\"30\"/></el-col>\r\n            <el-col :span=\"9\">通过sigmoid激活函数，如左图所示，当y值为0，那这个值就是0.5，如果y值非常大，那值就是1，如果值是1，那他就会选择向下游输出。如果说算出来的这个值接近于0\r\n        那他就不向下游输出。如果你算出来的激活函数是0.5，那他既有50%的可能向下游输出，又有50%的可能向上游输出。所以他是一个未定的。比如生活中你看到一个物体，你可能认为他是一只猫，也有可能认为他是个狗，你在看一会\r\n        你认为有99%的可能是一只狗，实际上，他可能是一个玩偶。\r\n        常用的激活函数为（左图所示）</el-col>\r\n        </el-row>\r\n        \r\n        厨师不可能从仲裁开始，要利用人工智能框架来编程。现阶段流行的人工智能框架有：<br/>\r\n        <div style=\"text-align: center;\">谷歌的TensorFlow、亚马逊的SageMaker、脸书的PyTorch、华为的MindSpore等</div>\r\n        \r\n    </el-card>\r\n    \r\n    </template>\r\n    <script setup>\r\n    \r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import { render } from \"./machine_learning.vue?vue&type=template&id=1143ad68\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<a href=\"https://cloud.tencent.com/developer/article/1709954\" target=\"_blank\">Address</a>\r\n  </template>\r\n  \r\n  <script setup>\r\n\r\n  </script>\r\n  \r\n  <style>\r\n </style>","import { render } from \"./draw.vue?vue&type=template&id=f0c08df2\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n<!-- :default-openeds=\"arr.start\" -->\r\n\r\n        <el-menu\r\n            :router=\"true\"\r\n            class=\"scoped el-menu-demo\"\r\n           :unique-opened=\"true\"\r\n           active-text-color=\"#ffd04b\"\r\n default-active=\"/science/machinelearning\"\r\n          \r\n        >\r\n        <el-menu-item index=\"/science/machinelearning\">机器学习</el-menu-item>\r\n        <el-menu-item index=\"/science/picRecognize\">图像识别</el-menu-item>\r\n        <el-menu-item index=\"/science/aitrifiles\">人工智能杂项</el-menu-item>\r\n        \r\n          <el-sub-menu index=\"1\">\r\n            <template #title>\r\n              <el-icon><icon-menu /></el-icon>\r\n              <span><strong>科研制图</strong></span>\r\n            </template>\r\n            \r\n          </el-sub-menu>\r\n\r\n            <!-- <el-sub-menu index=\"1-1\">\r\n            <template #title>\r\n              <el-icon><icon-menu /></el-icon>\r\n              <span><strong>常用算法</strong></span>\r\n            </template>\r\n            <el-menu-item index=\"/learn/zhishu\">试除法判定质数</el-menu-item>\r\n          </el-sub-menu> -->\r\n\r\n        </el-menu>\r\n\r\n  </template>\r\n  \r\n  <script setup>\r\n// import live2d from './learn/live2d/live2d.vue';\r\n\r\n  import {\r\n    Menu as IconMenu,\r\n  } from '@element-plus/icons-vue'\r\nimport { reactive } from 'vue';\r\nvar arr=reactive({start:[\"1\"]})\r\n  </script>\r\n  <style scoped>\r\n.scoped .el-menu-item {font-size: 24px;}\r\n.el-menu-demo .el-menu-item:hover .el-sub-menu:hover {\r\n  background-color: #fff !important; /* 修改为你想要的颜色 */\r\n}\r\n \r\n</style>","import script from \"./leftMenu_science.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./leftMenu_science.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./leftMenu_science.vue?vue&type=style&index=0&id=439a8e54&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-439a8e54\"]])\n\nexport default __exports__","import script from \"./science.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./science.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>人的视觉原理</strong></template>\r\n       <div class=\"card\">人如何能把看到的图像转化成这个是猫、哪个是狗呢？如果把之前深度学习运用到计算机中，就会效率很低，但人的眼睛却很准确，为什么呢？首先要讲的是神经认知。\r\n       实际上人眼看到的是这样的：<br/><div style=\"text-align: center;\"> 像素点→ 边缘、方向 → 轮廓、细节 → 判断</div><br/></div>\r\n    </el-card>\r\n    <div style=\"height: 30px;\"></div>\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>卷积神经网络</strong></template>\r\n        <div class=\"card\">是一种实用的图片识别方法，简写为CNN。什么是卷积？通信上常常会提到卷积，但他们不一样。这里的卷积指用数学的方法提取出图像特征。比方说有一张x的像素图，\r\n       在计算机看来就是一大堆数字\r\n       <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/x.png\" style=\"width: 70%;height: auto\"></el-col>\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/x_com.png\" style=\"width: 70%;height: auto\"></el-col>\r\n    </el-row>\r\n计算机如何看他是一个x还是什么呢，首先要提取特征，提取特征的方法就是使用卷积核来做卷积运算。卷积核也是一个3*3或5*5的方块。例如有如下一个卷积核：\r\n<br/>\r\n<el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"18\"><img src=\"../../../assets/pics/science/juanjihe1.png\"></el-col>\r\n    </el-row><br/>将它与左下图的每个3*3方块进行运算，形成右下图所示的特征图(3*3 乘以3*3，全部相加)<br/>\r\n<el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/juanjiyunsuan.png\" style=\"width: 70%;height: auto\"></el-col>\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/tezhengtu1.png\"></el-col>\r\n    </el-row>\r\n    <br/>\r\n    实际上这个卷积核就对应了一个特征，就是一个斜向右下的线条。而在特征图中数字比较大的部位就满足这个特征，数字越小就越不满足我想要一个圈，一个竖着的，也是同理。\r\n    总而言之，通过不同的卷积核，我们就能够对图像进行不同的处理，得到不同的特征图，显示出来这种特征在图像的那一个位置。\r\n    <br/>卷积之后下一个步骤就是池化和激活。\r\n</div>\r\n    </el-card>\r\n    <div style=\"height: 30px;\"></div>\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>池化、激活</strong></template>\r\n       <div class=\"card\">什么叫池化？比如对上面所说的特征图进行池化，采用最大池化的方法。把特征值2*2或2*1或1*2或1*1中最大的值取出，如左下图所示\r\n        ，最后得到比较小的特征图，如右下所示，但这个特征图其实依然保留了原来特征图的很重要的信息<br/>\r\n        <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/chihua.png\" style=\"width: 50%;height: auto\"></el-col>\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/chihuahoutezhengtu.png\"></el-col>\r\n    </el-row>\r\n    <br/>\r\n    池化后还需要激活，还记得之前机器学习中讲的激活函数吗？sigmoid函数。过程如下图所示：\r\n    <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"9\"><img src=\"../../../assets/pics/science/jihuo.png\" style=\"width: 140%;height: auto\"></el-col>\r\n    </el-row>\r\n    训练的过程就是不断地对图片进行卷积、池化、卷积、池化，经过多次卷积和池化之后，就可以找到很多特征，比如水平的线条、倾斜的线条、轮廓、颜色等。把足够多的\r\n    信息再接入全连接网络进行训练，最后就可以判断这个图像是什么了。这就是一个卷积神经网络的全貌。\r\n       </div>\r\n    </el-card>\r\n    <div style=\"height: 30px;\"></div>\r\n    \r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>算法、数据、算力</strong></template>\r\n       <div class=\"card\">算法、数据、算力缺一不可，算法讲完了，接下来讲数据。\r\n        数据其实就是用于人工智能训练的东西。例如你平时填验证码时一些事填字母和数字，一些是让你识别图片，这些可能就是利用你\r\n        在训练。算力是指进行卷积运算的运算量很大，用一张800*600像素的图片举例，rgb红光绿，故有800*600*3=1440000个像素点，用3*3*3（rgb，故再乘一个\r\n        3）的卷积核做卷积，大概需要1300万次乘法和1200万次加法。你要有成千上万张图片进行成千上万次处理，所以运算量非常大。用什么进行计算呢？用处理器（芯片\r\n        ，即CPU），它什么都能算，但只能串行。后来人们发现了一种比CPU更适合的东西，叫GPU图形处理器，它最开始是用来计算机中图像投影到屏幕上。它的专用性\r\n        强，GPU只会算加法和乘法，蛋挞并行能力强，可以同时算一大堆加法和乘法。现在有了更强的NPU神经网络处理器，是专门用来人工智能运算的处理器，并行能力更强了。\r\n\r\n       </div>\r\n    </el-card>\r\n    <div style=\"height: 30px;\"></div>\r\n\r\n    <div style=\"text-align: center;font-size: 10px;\">视屏讲解来自b站up主啥都会点的程序员，网址<a href=\"https://www.bilibili.com/video/BV1JL4y1A75L/?p=2&vd_source=02acd5ae2d601bc28a4f8dbab6ab9428\" target=\"_blank\">点击此处</a></div>\r\n    </template>\r\n    <script setup>\r\n    \r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import { render } from \"./picRecognize.vue?vue&type=template&id=2bbb45de\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\n    <template>\r\n\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>z字形变换</strong></template>\r\n    力扣第六题，输入一个字符串和z的行数，将这个字符串以w字形排列，按最后排出的来输出\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code_normal\"></highlightjs>\r\n  </el-card>\r\n  \r\n</template>\r\n<script setup>\r\n    var code_normal=`#include<cstring>\r\n    #include<iostream>\r\n    #include<vector>\r\n    class Solution {\r\n    public:\r\n        string convert(string s, int numRows) {\r\n            int len=s.size(),i=0,flag=1,j=1,tops[1000]={-1};\r\n            if(numRows<2) return s;\r\n            string ass[1000]={\"\"},res=\"\";\r\n            while(i<len){\r\n                    if(j==1)flag=1;\r\n                    ass[j].push_back(s[i]);\r\n                    j+=flag;\r\n                    if(j==numRows)flag=-1;\r\n                    i+=1;\r\n            }\r\n            for(i=1;i<=numRows;i++) res.append(ass[i]);\r\n            return res;\r\n            }\r\n    };\r\n`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>","import script from \"./2_zzixingbianhuan.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./2_zzixingbianhuan.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>二分查找</strong></template>\r\n    例如1，2，2，3，3，4，比如查找3，前者（第一个算法）用于查找左侧的3，右侧为右侧。\r\n    \r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code\"></highlightjs>\r\n    \r\n\r\n    \r\n      </el-card>\r\n    \r\n    </template>\r\n    <script setup>\r\n    var code=`//查找左边界 SearchLeft 简写SL\r\nint SL(int l, int r)\r\n{\r\n    while (l < r)\r\n    {\r\n        int mid = l + r >> 1;\r\n        if (check(mid)) r = mid; \r\n        else l = mid + 1; \r\n    }   \r\n    return l;\r\n}\r\n//查找右边界 SearchRight 简写SR \r\nint SR(int l, int r) \r\n{\r\n    while (l < r)\r\n    {                   \r\n        int mid = l + r + 1 >> 1; //需要+1 防止死循环\r\n        if (check(mid)) l = mid;\r\n        else r = mid - 1; \r\n    }\r\n    return r; \r\n}`\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>\r\n","import script from \"./divid.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./divid.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","\r\n    <template>\r\n\r\n\r\n<el-card style=\"max-width: 1200px\">\r\n    <template #header><strong>三数之和</strong></template>\r\n    力扣第15题，一个数组，输出所有三数之和为0的组合，且i！=j，j！=k，i！=k。<br/>\r\n    首先进行排序，记住，<div style=\"color: coral;\">双指针的前提：已经排好序</div><br/>\r\n    采用双指针做法。首先固定i（i=1,2...渐渐往后），然后j从i的下一个往后，k从最后一个往左，找到和为0的，直到j=k为止。<br/>\r\n    期间如果出现三数之和大于0，则k往前一位，如果出现三数之和小于0，则j往后一位。\r\n    <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code_normal\"></highlightjs>\r\n  </el-card>\r\n  \r\n</template>\r\n<script setup>\r\n    var code_normal=`class Solution {\r\npublic:\r\n    vector<vector<int>> threeSum(vector<int>& nums) {\r\n        vector<vector<int>> ans;\r\n        int n = nums.size();\r\n        sort(nums.begin(), nums.end());\r\n        for (int i = 0; i < n; ++i) {\r\n            if (i > 0 && nums[i] == nums[i-1]) continue;\r\n            int l = i+1, r = n-1;\r\n            while (l < r) {\r\n                if (nums[i]+nums[l]+nums[r] < 0) {\r\n                    ++l;\r\n                } else if (nums[i]+nums[l]+nums[r] > 0) {\r\n                    --r;\r\n                } else {\r\n                    ans.push_back({nums[i], nums[l], nums[r]});\r\n                    while (l+1 < nums.size() && nums[l] == nums[++l]);\r\n                    while (r-1 > 0 && nums[r] == nums[--r]);\r\n                }\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n};\r\n`\r\n</script>\r\n<style  scoped>\r\n\r\n</style>","import script from \"./sanshuzhihe.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./sanshuzhihe.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./zhongweishuwenti.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./zhongweishuwenti.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n\r\n\r\n    <el-card >\r\n        <template #header><strong>人工智能中的概念</strong></template>\r\n        \r\n    <strong>无监督学习（unsupervised learning ）</strong>：无监督学习是机器学习中的一种训练方式/学习方式。还有另外两种学习方式分别是非监督学习、强化学习。\r\n    2类无监督学习的思维：聚类、降维。<br/>\r\n    标签：例如一张图片，带有猫、狗、人的标签。<br/>\r\n    <el-row class=\"row-bg\" justify=\"space-evenly\">\r\n        <el-col :span=\"9\">监督学习<br/>1.目标明确<br/>2.需要带标签的训练数据<br/>3.效果容易评估</el-col>\r\n        <el-col :span=\"9\">无监督学习<br/>1.目标不明确<br/>2.不需要带标签的训练数据<br/>3.效果很难评估</el-col>\r\n    </el-row>\r\n    半监督式学习问题介于监督式和非监督式学习之间。这里有一个好例子如：照片分类，但是只有部分照片带有标签(如，狗、猫和人)，但是大部分照片都没有标签。<br/>\r\n<strong>多视图聚类</strong>：caltech101-7数据集，有1474个样本，我们对这些样本做不同的处理，得到不同的特征。<br/>\r\n48 维的 Gabor 特征、<br/>\r\n40 维的 wavelet moments (WM)、<br/>\r\n254 维的 CENTRIST 特征、<br/>\r\n1984 维的 HOG 特征、<br/>\r\n512 维的 GIST 特征、<br/>\r\n928 维的 LBP 特征。<br/>\r\n这样就能得到对相同样本的不同角度的描述啦～<br/>\r\n      </el-card>\r\n    \r\n    </template>\r\n    <script setup>\r\n    \r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import { render } from \"./aitrifiles.vue?vue&type=template&id=359351c4\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\n<template>\r\n\r\n\r\n    <el-card style=\"max-width: 1200px\">\r\n        <template #header><strong>输出所有序列</strong></template>\r\n        acwing842.排序数字。输入一个数n，输出从1到n所有序列<br/>\r\n        例如：输入3，则输出123,132,213,231,312,321<br/>\r\n        为什么main中dfs(0)?例如输入的是3，从第0个位置开始，再看第一个位置，再看第二个位置，再看第三个位置（就是空了，此时输出）<br/>\r\n        之后的for循环逐个填入，st存的是1,2,3三个数字哪几个已被使用，使用了则为true。path存的是已经走过的路径。\r\n        <highlightjs  language=\"c++\" :autodetect=\"false\" :code=\"code_normal\"></highlightjs>\r\n      </el-card>\r\n      \r\n    </template>\r\n    <script setup>\r\n        var code_normal=`#include<stdio.h>\r\n#include<string.h>\r\n#define  N  8\r\nint n,path[N],st[N];\r\nvoid dfs(int x){\r\n    if(x==n){\r\n        for(int i = 0 ; i < n;i++)printf(\"%d \",path[i]);\r\n        puts(\"\");\r\n        return;\r\n    }\r\n    for(int i=1;i<=n;i++ ){//数字为从1到n\r\n        if(!st[i]){\r\n            st[i]=1;\r\n            path[x]=i;\r\n            dfs(x+1);\r\n            st[i]=0;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    scanf(\"%d\",&n);\r\n    dfs(0);\r\n}\r\n    `\r\n    </script>\r\n    <style  scoped>\r\n    \r\n    </style>","import script from \"./5_dfstemplate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./5_dfstemplate.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter,createWebHashHistory } from \"vue-router\";\r\nimport learn from '../views/learn.vue'\r\nimport dfs from '../components/learn/learn_alg/1_graph/dfs.vue'\r\nimport bfs from \"@/components/learn/learn_alg/1_graph/bfs.vue\";\r\nimport treeDfs from \"@/components/learn/learn_alg/2_tree/treeDfs.vue\";\r\nimport arrayNodes from \"@/components/learn/learn_alg/4_linkedNode/arrayNodes.vue\";\r\nimport heap_ops from \"@/components/learn/learn_alg/5_heap/heap_ops.vue\";\r\nimport ij from \"@/components/learn/learn_alg/alg/ij.vue\";\r\nimport stringHash from \"@/components/learn/learn_alg/alg/stringHash.vue\";\r\nimport trieTree from \"@/components/learn/learn_alg/alg/trieTree.vue\";\r\nimport unionFind from \"@/components/learn/learn_alg/alg/unionFind.vue\";\r\nimport window from \"@/components/learn/learn_alg/alg/window.vue\";\r\nimport quicksort from \"@/components/learn/learn_alg/3_sort/quicksort.vue\"\r\nimport mergesort from \"@/components/learn/learn_alg/3_sort/mergesort.vue\";\r\nimport vector from \"@/components/learn/toolAlgs/vector.vue\";\r\nimport deque from \"@/components/learn/toolAlgs/deque.vue\";\r\nimport map from \"@/components/learn/toolAlgs/map.vue\";\r\nimport memset from \"@/components/learn/toolAlgs/memset.vue\";\r\nimport pair from \"@/components/learn/toolAlgs/pair.vue\"\r\nimport set from \"@/components/learn/toolAlgs/set.vue\"\r\nimport second from \"@/views/second.vue\";\r\nimport decisionTree from \"@/components/learn/knowledge/ai/decisionTree.vue\";\r\nimport remender from \"@/components/learn/frontend/remender.vue\";\r\nimport webs from \"@/views/webs.vue\";\r\nimport stack from \"@/components/learn/arrayImitate/stack.vue\";\r\nimport queue from \"@/components/learn/arrayImitate/queue.vue\";\r\nimport hash from \"@/components/learn/arrayImitate/hash.vue\";\r\nimport linkedNodes from \"@/components/learn/arrayImitate/linkedNodes.vue\";\r\nimport strings from \"../components/learn/toolAlgs/strings.vue\"\r\nimport zhishu from \"../components/learn/learn_alg/0_often/zhishu.vue\"\r\nimport qianzhuihe from \"../components/learn/learn_alg/0_often/qianzhuihe.vue\"\r\nimport shaifa from \"../components/learn/learn_alg/0_often/shaifa.vue\"\r\nimport alg from \"../components/learn/learn_alg/0_often/alg.vue\"\r\nimport zuichanghuiwenVue from \"@/components/questions/zuichanghuiwen.vue\";\r\nimport questions from '../views/questions.vue'\r\nimport machine_learning from \"@/components/science/machine_learning.vue\";\r\nimport draw from \"@/components/science/draw.vue\"; \r\nimport science from '../views/science.vue'\r\nimport picRecognize from \"@/components/science/ai/picRecognize.vue\"; \r\nimport zzixingbianhuan from \"@/components/questions/2_zzixingbianhuan.vue\"\r\nimport divid from \"@/components/learn/learn_alg/alg/divid.vue\";\r\nimport sanshuzhihe from  \"@/components/questions/sanshuzhihe.vue\"\r\nimport zhongweishuwenti from  \"@/components/questions/zhongweishuwenti.vue\"\r\nimport aitrifiles from \"@/components/science/aitrifiles.vue\"; \r\nimport dfstemplate from \"@/components/questions/5_dfstemplate.vue\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst routes = [\r\n    {path:'/learn',component:learn,children:[{path:'',component:dfs},{path:'dfs',component:dfs},{path:'mergesort',component:mergesort},{path:'quicksort',component:quicksort},\r\n    {path:'bfs',component:bfs},{path:'treeDfs',component:treeDfs},{path:'arrayNodes',component:arrayNodes},{path:'heap_ops',component:heap_ops},\r\n    {path:'ij',component:ij},{path:'stringHash',component:stringHash},{path:'trieTree',component:trieTree},{path:'unionFind',component:unionFind},\r\n    {path:'window',component:window},{path:'vector',component:vector},{path:'deque',component:deque},{path:'memset',component:memset},\r\n    {path:'pair',component:pair},{path:'map',component:map},{path:'set',component:set},{path:'unionFind',component:unionFind},\r\n    {path:'decisionTree',component:decisionTree},{path:'remender',component:remender},{path:'strings',component:strings},\r\n    {path:'stack',component:stack},{path:'queue',component:queue},{path:'hash',component:hash},{path:'linkedNodes',component:linkedNodes},\r\n    {path:'zhishu',component:zhishu} ,{path:'qianzhuihe',component:qianzhuihe},{path:'shaifa',component:shaifa}, {path:'alg',component:alg},\r\n    {path:'divid',component:divid}\r\n    // ,{path:'queue',component:queue},\r\n    // {path:'stack',component:stack},{path:'queue',component:queue},\r\n    // {path:'stack',component:stack},{path:'queue',component:queue},\r\n    // {path:'stack',component:stack},{path:'queue',component:queue},\r\n    // {path:'stack',component:stack},{path:'queue',component:queue},\r\n      ]},{path:'/second',component:second,children:[{path:'',component:dfs}]},\r\n    {\r\n      path:'/',\r\n      redirect:'/science/machinelearning'\r\n    },\r\n    {path:'/webs',component:webs},\r\n    {path:'/questions',component:questions,children:[{path:'zuichanghuiwen',component:zuichanghuiwenVue},\r\n    {path:'sanshuzhihe',component:sanshuzhihe},\r\n    {path:'zhongweishuwenti',component:zhongweishuwenti},{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n    ,{path:'dfstemplate',component:dfstemplate}\r\n    // ,{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n    // ,{path:'zhongweishuwenti',component:zhongweishuwenti},{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n    // ,{path:'zhongweishuwenti',component:zhongweishuwenti},{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n    // ,{path:'zhongweishuwenti',component:zhongweishuwenti},{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n    // ,{path:'zhongweishuwenti',component:zhongweishuwenti},{path:'zzixingbianhuan',component:zzixingbianhuan}\r\n  \r\n  \r\n  ]},\r\n    {path:'/science',component:science,children:[{path:'machinelearning',component:machine_learning},{path:'draw',component:draw},\r\n    {path:'picRecognize',component:picRecognize},\r\n    {path:'aitrifiles',component:aitrifiles}\r\n    // {path:'picRecognize',component:picRecognize},\r\n    // {path:'picRecognize',component:picRecognize},{path:'picRecognize',component:picRecognize},{path:'picRecognize',component:picRecognize}\r\n  ]},\r\n  ]\r\n  const router = createRouter({\r\n     \r\n    history:createWebHashHistory(),\r\n    routes\r\n  })\r\n  export default router\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport ElementUI from 'element-plus'\nimport 'element-plus/theme-chalk/index.css'\nimport '../public/static/css/code.css'\nimport VueLatex from 'vatex'\n// highlight 的样式，依赖包，组件\nimport 'highlight.js/styles/atom-one-dark.css'\nimport 'highlight.js/lib/common'\nimport hljsVuePlugin from '@highlightjs/vue-plugin'\n\n// import  './static/live2dw/lib/L2Dwidget.min.js'\n//注册组件\nconst app = createApp(App)\napp.use(hljsVuePlugin)\napp.use(VueLatex)\napp.use(router)\napp.use(ElementUI)\n\n\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkBlog\"] = self[\"webpackChunkBlog\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6544); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["__exports__","ref","style","_createElementBlock","_hoisted_1","app","model","window","PIXI","mounted","view","this","$refs","liveCanvas","autoStart","resizeTo","backgroundAlpha","Live2DModel","from","stage","addChild","scale","set","internalModel","hitAreas","y","on","x","data","global","hitTest","console","log","expression","render","reactive","start","code4","code3","code1","code","codemi","class","_createElementVNode","id","spellcheck","lang","autocorrect","autocapitalize","tabindex","role","_createTextVNode","_hoisted_2","_hoisted_3","script","per_code","mod_code","onMounted","Cesium","Ion","defaultAccessToken","viewer","Viewer","item","guonihe","niheExamples","randomForest","a","huanhang","dakonggge","xiaokongge","bold","code2","link_code","open_code","_Fragment","_createVNode","_component_el_card","header","_withCtx","default","_component_el_text","tag","size","_","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","code5","code6","code_normal","code_dp","shi","tableData","flag0","flag1","flag2","flag3","flag4","src","_imports_0","_imports_1","_component_vue_latex","_component_el_row","justify","_component_el_col","span","href","target","_imports_2","_imports_3","_imports_4","_imports_5","_imports_6","_imports_7","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_createBlock","routes","path","component","learn","children","dfs","mergesort","quicksort","bfs","treeDfs","arrayNodes","heap_ops","ij","stringHash","trieTree","unionFind","vector","deque","memset","pair","map","decisionTree","remender","strings","stack","queue","hash","linkedNodes","zhishu","qianzhuihe","shaifa","alg","divid","second","redirect","webs","questions","zuichanghuiwenVue","sanshuzhihe","zhongweishuwenti","zzixingbianhuan","dfstemplate","science","machine_learning","draw","picRecognize","aitrifiles","router","createRouter","history","createWebHashHistory","createApp","App","use","hljsVuePlugin","VueLatex","ElementUI","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}